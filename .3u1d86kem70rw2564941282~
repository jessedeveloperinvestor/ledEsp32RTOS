[
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_CMAKE",
        "name": "IDF_CMAKE",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_ENV_FPGA",
        "name": "IDF_ENV_FPGA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH_RISCV",
        "name": "IDF_TARGET_ARCH_RISCV",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ARCH_XTENSA",
        "name": "IDF_TARGET_ARCH_XTENSA",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET",
        "name": "IDF_TARGET",
        "range": null,
        "title": null,
        "type": "string"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32",
        "name": "IDF_TARGET_ESP32",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32S2",
        "name": "IDF_TARGET_ESP32S2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32S3",
        "name": "IDF_TARGET_ESP32S3",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32C3",
        "name": "IDF_TARGET_ESP32C3",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_ESP32H2",
        "name": "IDF_TARGET_ESP32H2",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_TARGET_LINUX",
        "name": "IDF_TARGET_LINUX",
        "range": null,
        "title": null,
        "type": "bool"
    },
    {
        "children": [],
        "depends_on": null,
        "help": null,
        "id": "IDF_FIRMWARE_CHIP_ID",
        "name": "IDF_FIRMWARE_CHIP_ID",
        "range": null,
        "title": null,
        "type": "hex"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "The prefix/path that is used to call the toolchain. The default setting assumes\na crosstool-ng gcc setup that is in your PATH.",
                "id": "SDK_TOOLPREFIX",
                "name": "SDK_TOOLPREFIX",
                "range": null,
                "title": "Compiler toolchain path/prefix",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "The executable name/path that is used to run python.\n\n(Note: This option is used with the legacy GNU Make build system only.)",
                "id": "SDK_PYTHON",
                "name": "SDK_PYTHON",
                "range": null,
                "title": "Python interpreter",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "Adds --warn-undefined-variables to MAKEFLAGS. This causes make to\nprint a warning any time an undefined variable is referenced.\n\nThis option helps find places where a variable reference is misspelled\nor otherwise missing, but it can be unwanted if you have Makefiles which\ndepend on undefined variables expanding to an empty string.\n\n(Note: this option is used with the legacy GNU Make build system only.)",
                "id": "SDK_MAKE_WARN_UNDEFINED_VARIABLES",
                "name": "SDK_MAKE_WARN_UNDEFINED_VARIABLES",
                "range": null,
                "title": "'make' warns on undefined variables",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option in case you have a custom toolchain which supports time_t wide 64-bits.\nThis option checks time_t is 64-bits and disables ROM time functions\nto use the time functions from the toolchain instead.\nThis option allows resolving the Y2K38 problem.\nSee \"Setup Linux Toolchain from Scratch\" to build\na custom toolchain which supports 64-bits time_t.\n\nNote: ESP-IDF does not currently come with any pre-compiled toolchain\nthat supports 64-bit wide time_t.\nThis will change in a future major release,\nbut currently 64-bit time_t requires a custom built toolchain.",
                "id": "SDK_TOOLCHAIN_SUPPORTS_TIME_WIDE_64_BITS",
                "name": "SDK_TOOLCHAIN_SUPPORTS_TIME_WIDE_64_BITS",
                "range": null,
                "title": "Toolchain supports time_t wide 64-bits",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "sdk-tool-configuration",
        "title": "SDK tool configuration",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice APP_BUILD_TYPE>",
                        "help": null,
                        "id": "APP_BUILD_TYPE_APP_2NDBOOT",
                        "name": "APP_BUILD_TYPE_APP_2NDBOOT",
                        "range": null,
                        "title": "Default (binary application + 2nd stage bootloader)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice APP_BUILD_TYPE>",
                        "help": null,
                        "id": "APP_BUILD_TYPE_ELF_RAM",
                        "name": "APP_BUILD_TYPE_ELF_RAM",
                        "range": null,
                        "title": "ELF file, loadable into RAM (EXPERIMENTAL))",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Select the way the application is built.\n\nBy default, the application is built as a binary file in a format compatible with\nthe ESP-IDF bootloader. In addition to this application, 2nd stage bootloader is\nalso built. Application and bootloader binaries can be written into flash and\nloaded/executed from there.\n\nAnother option, useful for only very small and limited applications, is to only link\nthe .elf file of the application, such that it can be loaded directly into RAM over\nJTAG. Note that since IRAM and DRAM sizes are very limited, it is not possible to\nbuild any complex application this way. However for kinds of testing and debugging,\nthis option may provide faster iterations, since the application does not need to be\nwritten into flash.\nNote that at the moment, ESP-IDF does not contain all the startup code required to\ninitialize the CPUs and ROM memory (data/bss). Therefore it is necessary to execute\na bit of ROM code prior to executing the application. A gdbinit file may look as follows (for ESP32):\n\n    # Connect to a running instance of OpenOCD\n    target remote :3333\n    # Reset and halt the target\n    mon reset halt\n    # Run to a specific point in ROM code,\n    #  where most of initialization is complete.\n    thb *0x40007d54\n    c\n    # Load the application into RAM\n    load\n    # Run till app_main\n    tb app_main\n    c\n\nExecute this gdbinit file as follows:\n\n    xtensa-esp32-elf-gdb build/app-name.elf -x gdbinit\n\nExample gdbinit files for other targets can be found in tools/test_apps/system/gdb_loadable_elf/\n\nRecommended sdkconfig.defaults for building loadable ELF files is as follows.\nCONFIG_APP_BUILD_TYPE_ELF_RAM is required, other options help reduce application\nmemory footprint.\n\n    CONFIG_APP_BUILD_TYPE_ELF_RAM=y\n    CONFIG_VFS_SUPPORT_TERMIOS=\n    CONFIG_NEWLIB_NANO_FORMAT=y\n    CONFIG_ESP_SYSTEM_PANIC_PRINT_HALT=y\n    CONFIG_ESP_DEBUG_STUBS_ENABLE=\n    CONFIG_ESP_ERR_TO_NAME_LOOKUP=",
                "id": "build-type-application-build-type",
                "name": "APP_BUILD_TYPE",
                "title": "Application build type",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_GENERATE_BINARIES",
                "name": "APP_BUILD_GENERATE_BINARIES",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_BOOTLOADER",
                "name": "APP_BUILD_BOOTLOADER",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "APP_BUILD_USE_FLASH_SECTIONS",
                "name": "APP_BUILD_USE_FLASH_SECTIONS",
                "range": null,
                "title": null,
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "build-type",
        "title": "Build type",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "If set, then the app will be built with the current time/date stamp. It is stored in the app description\nstructure. If not set, time/date stamp will be excluded from app image. This can be useful for getting the\nsame binary image files made from the same source, but at different times.",
                "id": "APP_COMPILE_TIME_DATE",
                "name": "APP_COMPILE_TIME_DATE",
                "range": null,
                "title": "Use time/date stamp for app",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The PROJECT_VER variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.",
                "id": "APP_EXCLUDE_PROJECT_VER_VAR",
                "name": "APP_EXCLUDE_PROJECT_VER_VAR",
                "range": null,
                "title": "Exclude PROJECT_VER from firmware image",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The PROJECT_NAME variable from the build system will not affect the firmware image.\nThis value will not be contained in the esp_app_desc structure.",
                "id": "APP_EXCLUDE_PROJECT_NAME_VAR",
                "name": "APP_EXCLUDE_PROJECT_NAME_VAR",
                "range": null,
                "title": "Exclude PROJECT_NAME from firmware image",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "APP_PROJECT_VER_FROM_CONFIG",
                        "help": "Project version",
                        "id": "APP_PROJECT_VER",
                        "name": "APP_PROJECT_VER",
                        "range": null,
                        "title": "Project version",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "help": "If this is enabled, then config item APP_PROJECT_VER will be used for the variable PROJECT_VER.\nOther ways to set PROJECT_VER will be ignored.",
                "id": "APP_PROJECT_VER_FROM_CONFIG",
                "name": "APP_PROJECT_VER_FROM_CONFIG",
                "range": null,
                "title": "Get the project version from Kconfig",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "At startup, the app will read this many hex characters from the embedded APP ELF SHA-256 hash value\nand store it in static RAM. This ensures the app ELF SHA-256 value is always available\nif it needs to be printed by the panic handler code.\nChanging this value will change the size of a static buffer, in bytes.",
                "id": "APP_RETRIEVE_LEN_ELF_SHA",
                "name": "APP_RETRIEVE_LEN_ELF_SHA",
                "range": [
                    8,
                    64
                ],
                "title": "The length of APP ELF SHA is stored in RAM(chars)",
                "type": "int"
            }
        ],
        "depends_on": null,
        "id": "application-manager",
        "title": "Application manager",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": null,
                "help": "Offset address that 2nd bootloader will be flashed to.\nThe value is determined by the ROM bootloader.\nIt's not configurable in ESP-IDF.",
                "id": "BOOTLOADER_OFFSET_IN_FLASH",
                "name": "BOOTLOADER_OFFSET_IN_FLASH",
                "range": null,
                "title": null,
                "type": "hex"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",
                        "range": null,
                        "title": "Size (-Os)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG",
                        "range": null,
                        "title": "Debug (-Og)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_PERF",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_PERF",
                        "range": null,
                        "title": "Optimize for performance (-O2)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "BOOTLOADER_COMPILER_OPTIMIZATION_NONE",
                        "name": "BOOTLOADER_COMPILER_OPTIMIZATION_NONE",
                        "range": null,
                        "title": "Debug without optimization (-O0)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "This option sets compiler optimization level (gcc -O argument)\nfor the bootloader.\n\n- The default \"Size\" setting will add the -0s flag to CFLAGS.\n- The \"Debug\" setting will add the -Og flag to CFLAGS.\n- The \"Performance\" setting will add the -O2 flag to CFLAGS.\n- The \"None\" setting will add the -O0 flag to CFLAGS.\n\nNote that custom optimization levels may be unsupported.",
                "id": "bootloader-config-bootloader-optimization-level",
                "name": "BOOTLOADER_COMPILER_OPTIMIZATION",
                "title": "Bootloader optimization Level",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_NONE",
                        "name": "BOOTLOADER_LOG_LEVEL_NONE",
                        "range": null,
                        "title": "No output",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_ERROR",
                        "name": "BOOTLOADER_LOG_LEVEL_ERROR",
                        "range": null,
                        "title": "Error",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_WARN",
                        "name": "BOOTLOADER_LOG_LEVEL_WARN",
                        "range": null,
                        "title": "Warning",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_INFO",
                        "name": "BOOTLOADER_LOG_LEVEL_INFO",
                        "range": null,
                        "title": "Info",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_DEBUG",
                        "name": "BOOTLOADER_LOG_LEVEL_DEBUG",
                        "range": null,
                        "title": "Debug",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_LOG_LEVEL>",
                        "help": null,
                        "id": "BOOTLOADER_LOG_LEVEL_VERBOSE",
                        "name": "BOOTLOADER_LOG_LEVEL_VERBOSE",
                        "range": null,
                        "title": "Verbose",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Specify how much output to see in bootloader logs.",
                "id": "bootloader-config-bootloader-log-verbosity",
                "name": "BOOTLOADER_LOG_LEVEL",
                "title": "Bootloader log verbosity",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "BOOTLOADER_LOG_LEVEL",
                "name": "BOOTLOADER_LOG_LEVEL",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT)",
                "help": "This setting is only used if the SPI flash pins have been overridden by setting the eFuses\nSPI_PAD_CONFIG_xxx, and the SPI flash mode is QIO or QOUT.\n\nWhen this is the case, the eFuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka\nESP32 pin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in eFuse. The same pin is also used\nfor external SPIRAM if it is enabled.\n\nIf this config item is set to N (default), the correct WP pin will be automatically used for any\nEspressif chip or module with integrated flash. If a custom setting is needed, set this config item to\nY and specify the GPIO number connected to the WP.",
                "id": "BOOTLOADER_SPI_CUSTOM_WP_PIN",
                "name": "BOOTLOADER_SPI_CUSTOM_WP_PIN",
                "range": null,
                "title": "Use custom SPI Flash WP Pin when flash pins set in eFuse (read help)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32 && (ESPTOOLPY_FLASHMODE_QIO || ESPTOOLPY_FLASHMODE_QOUT)",
                "help": "The option \"Use custom SPI Flash WP Pin\" must be set or this value is ignored\n\nIf burning a customized set of SPI flash pins in eFuse and using QIO or QOUT mode for flash, set this\nvalue to the GPIO number of the SPI flash WP pin.",
                "id": "BOOTLOADER_SPI_WP_PIN",
                "name": "BOOTLOADER_SPI_WP_PIN",
                "range": null,
                "title": "Custom SPI Flash WP Pin",
                "type": "int"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && <choice BOOTLOADER_VDDSDIO_BOOST>",
                        "help": null,
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_8V",
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V",
                        "range": null,
                        "title": "1.8V",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>",
                        "help": null,
                        "id": "BOOTLOADER_VDDSDIO_BOOST_1_9V",
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V",
                        "range": null,
                        "title": "1.9V",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using eFuse\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via eFuse.",
                "id": "bootloader-config-vddsdio-ldo-voltage",
                "name": "BOOTLOADER_VDDSDIO_BOOST",
                "title": "VDDSDIO LDO voltage",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled (note that on some SoCs.\nnot all pins have an internal pull-up, consult the hardware datasheet for details.) To trigger a factory\nreset, this GPIO must be held high or low (as configured) on startup.",
                        "id": "BOOTLOADER_NUM_PIN_FACTORY_RESET",
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET",
                        "range": null,
                        "title": "Number of the GPIO input for factory reset",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_FACTORY_RESET_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_FACTORY_RESET_PIN_LOW",
                                "name": "BOOTLOADER_FACTORY_RESET_PIN_LOW",
                                "range": null,
                                "title": "Reset on GPIO low",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BOOTLOADER_FACTORY_RESET_PIN_LEVEL>",
                                "help": null,
                                "id": "BOOTLOADER_FACTORY_RESET_PIN_HIGH",
                                "name": "BOOTLOADER_FACTORY_RESET_PIN_HIGH",
                                "range": null,
                                "title": "Reset on GPIO high",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "Pin level for factory reset, can be triggered on low or high.",
                        "id": "bootloader-config-gpio-triggers-factory-reset-factory-reset-gpio-level",
                        "name": "BOOTLOADER_FACTORY_RESET_PIN_LEVEL",
                        "title": "Factory reset GPIO level",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a\nfactory reset.",
                        "id": "BOOTLOADER_OTA_DATA_ERASE",
                        "name": "BOOTLOADER_OTA_DATA_ERASE",
                        "range": null,
                        "title": "Clear OTA data on factory reset (select factory partition)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_FACTORY_RESET",
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this:\n\"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.",
                        "id": "BOOTLOADER_DATA_FACTORY_RESET",
                        "name": "BOOTLOADER_DATA_FACTORY_RESET",
                        "range": null,
                        "title": "Comma-separated names of partitions to clear on factory reset",
                        "type": "string"
                    }
                ],
                "depends_on": null,
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input held at the configured level while\ndevice starts up. See settings below.",
                "id": "BOOTLOADER_FACTORY_RESET",
                "name": "BOOTLOADER_FACTORY_RESET",
                "range": null,
                "title": "GPIO triggers factory reset",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_APP_TEST",
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app, this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.",
                        "id": "BOOTLOADER_NUM_PIN_APP_TEST",
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST",
                        "range": null,
                        "title": "Number of the GPIO input to boot TEST partition",
                        "type": "int"
                    }
                ],
                "depends_on": "!BOOTLOADER_APP_ANTI_ROLLBACK",
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.",
                "id": "BOOTLOADER_APP_TEST",
                "name": "BOOTLOADER_APP_TEST",
                "range": null,
                "title": "GPIO triggers boot from test app partition",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST",
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.",
                "id": "BOOTLOADER_HOLD_TIME_GPIO",
                "name": "BOOTLOADER_HOLD_TIME_GPIO",
                "range": null,
                "title": "Hold time of GPIO for reset/test mode (seconds)",
                "type": "int"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_WDT_ENABLE",
                        "help": "If this option is set, the ESP-IDF app must explicitly reset, feed, or disable the rtc_wdt in\nthe app's own code.\nIf this option is not set (default), then rtc_wdt will be disabled by ESP-IDF before calling\nthe app_main() function.\n\nUse function rtc_wdt_feed() for resetting counter of rtc_wdt.\nUse function rtc_wdt_disable() for disabling rtc_wdt.",
                        "id": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE",
                        "name": "BOOTLOADER_WDT_DISABLE_IN_USER_CODE",
                        "range": null,
                        "title": "Allows RTC watchdog disable in user code",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_WDT_ENABLE",
                        "help": "Verify that this parameter is correct and more then the execution time.\nPay attention to options such as reset to factory, trigger test partition and encryption on boot\n- these options can increase the execution time.\nNote: RTC_WDT will reset while encryption operations will be performed.",
                        "id": "BOOTLOADER_WDT_TIME_MS",
                        "name": "BOOTLOADER_WDT_TIME_MS",
                        "range": [
                            0,
                            120000
                        ],
                        "title": "Timeout for RTC watchdog (ms)",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "help": "Tracks the execution time of startup code.\nIf the execution time is exceeded, the RTC_WDT will restart system.\nIt is also useful to prevent a lock up in start code caused by an unstable power source.\nNOTE: Tracks the execution time starts from the bootloader code - re-set timeout, while selecting the\nsource for slow_clk - and ends calling app_main.\nRe-set timeout is needed due to WDT uses a SLOW_CLK clock source. After changing a frequency slow_clk a\ntime of WDT needs to re-set for new frequency.\nslow_clk depends on ESP32_RTC_CLK_SRC (INTERNAL_RC or EXTERNAL_CRYSTAL).",
                "id": "BOOTLOADER_WDT_ENABLE",
                "name": "BOOTLOADER_WDT_ENABLE",
                "range": null,
                "title": "Use RTC watchdog in start code",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "help": "The secure version is the sequence number stored in the header of each firmware.\nThe security version is set in the bootloader, version is recorded in the eFuse field\nas the number of set ones. The allocated number of bits in the efuse field\nfor storing the security version is limited (see BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD option).\n\nBootloader: When bootloader selects an app to boot, an app is selected that has\na security version greater or equal that recorded in eFuse field.\nThe app is booted with a higher (or equal) secure version.\n\nThe security version is worth increasing if in previous versions there is\na significant vulnerability and their use is not acceptable.\n\nYour partition table should has a scheme with ota_0 + ota_1 (without factory).",
                                "id": "BOOTLOADER_APP_SECURE_VERSION",
                                "name": "BOOTLOADER_APP_SECURE_VERSION",
                                "range": null,
                                "title": "eFuse secure version of app",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "help": "The size of the efuse secure version field.\nIts length is limited to 32 bits for ESP32 and 16 bits for ESP32-S2.\nThis determines how many times the security version can be increased.",
                                "id": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD",
                                "name": "BOOTLOADER_APP_SEC_VER_SIZE_EFUSE_FIELD",
                                "range": null,
                                "title": "Size of the efuse secure version field",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BOOTLOADER_APP_ANTI_ROLLBACK",
                                "help": "This option allows to emulate read/write operations with all eFuses and efuse secure version.\nIt allows to test anti-rollback implemention without permanent write eFuse bits.\nThere should be an entry in partition table with following details: `emul_efuse, data, efuse, , 0x2000`.\n\nThis option enables: EFUSE_VIRTUAL and EFUSE_VIRTUAL_KEEP_IN_FLASH.",
                                "id": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE",
                                "name": "BOOTLOADER_EFUSE_SECURE_VERSION_EMULATE",
                                "range": null,
                                "title": "Emulate operations with efuse secure version(only test)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                        "help": "This option prevents rollback to previous firmware/application image with lower security version.",
                        "id": "BOOTLOADER_APP_ANTI_ROLLBACK",
                        "name": "BOOTLOADER_APP_ANTI_ROLLBACK",
                        "range": null,
                        "title": "Enable app anti-rollback support",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "After updating the app, the bootloader runs a new app with the \"ESP_OTA_IMG_PENDING_VERIFY\" state set.\nThis state prevents the re-run of this app. After the first boot of the new app in the user code, the\nfunction should be called to confirm the operability of the app or vice versa about its non-operability.\nIf the app is working, then it is marked as valid. Otherwise, it is marked as not valid and rolls back to\nthe previous working app. A reboot is performed, and the app is booted before the software update.\nNote: If during the first boot a new app the power goes out or the WDT works, then roll back will happen.\nRollback is possible only between the apps with the same security versions.",
                "id": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                "name": "BOOTLOADER_APP_ROLLBACK_ENABLE",
                "range": null,
                "title": "Enable app rollback support",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "(SECURE_BOOT && SECURE_BOOT_INSECURE) || !SECURE_BOOT",
                "help": "This option disables the normal validation of an image coming out of\ndeep sleep (checksums, SHA256, and signature). This is a trade-off\nbetween wakeup performance from deep sleep, and image integrity checks.\n\nOnly enable this if you know what you are doing. It should not be used\nin conjunction with using deep_sleep() entry and changing the active OTA\npartition as this would skip the validation upon first load of the new\nOTA partition.\n\nIt is possible to enable this option with Secure Boot if \"allow insecure\noptions\" is enabled, however it's strongly recommended to NOT enable it as\nit may allow a Secure Boot bypass.",
                "id": "BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP",
                "name": "BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP",
                "range": null,
                "title": "Skip image validation when exiting deep sleep",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_SIGNED_ON_BOOT",
                "help": "Some applications need to boot very quickly from power on. By default, the entire app binary\nis read from flash and verified which takes up a significant portion of the boot time.\n\nEnabling this option will skip validation of the app when the SoC boots from power on.\nNote that in this case it's not possible for the bootloader to detect if an app image is\ncorrupted in the flash, therefore it's not possible to safely fall back to a different app\npartition. Flash corruption of this kind is unlikely but can happen if there is a serious\nfirmware bug or physical damage.\n\nFollowing other reset types, the bootloader will still validate the app image. This increases\nthe chances that flash corruption resulting in a crash can be detected following soft reset, and\nthe bootloader will fall back to a valid app image. To increase the chances of successfully recovering\nfrom a flash corruption event, keep the option BOOTLOADER_WDT_ENABLE enabled and consider also enabling\nBOOTLOADER_WDT_DISABLE_IN_USER_CODE - then manually disable the RTC Watchdog once the app is running.\nIn addition, enable both the Task and Interrupt watchdog timers with reset options set.",
                "id": "BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON",
                "name": "BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON",
                "range": null,
                "title": "Skip image validation from power on reset (READ HELP FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_SIGNED_ON_BOOT",
                "help": "Selecting this option prevents the bootloader from ever validating the app image before\nbooting it. Any flash corruption of the selected app partition will make the entire SoC\nunbootable.\n\nAlthough flash corruption is a very rare case, it is not recommended to select this option.\nConsider selecting \"Skip image validation from power on reset\" instead. However, if boot time\nis the only important factor then it can be enabled.",
                "id": "BOOTLOADER_SKIP_VALIDATE_ALWAYS",
                "name": "BOOTLOADER_SKIP_VALIDATE_ALWAYS",
                "range": null,
                "title": "Skip image validation always (READ HELP FIRST)",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Reserve RTC FAST memory for Skip image validation. This option in bytes.\nThis option reserves an area in the RTC FAST memory (access only PRO_CPU).\nUsed to save the addresses of the selected application.\nWhen a wakeup occurs (from Deep sleep), the bootloader retrieves it and\nloads the application without validation.",
                "id": "BOOTLOADER_RESERVE_RTC_SIZE",
                "name": "BOOTLOADER_RESERVE_RTC_SIZE",
                "range": null,
                "title": null,
                "type": "hex"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                        "help": "This option reserves in RTC FAST memory the area for custom purposes.\nIf you want to create your own bootloader and save more information\nin this area of memory, you can increase it. It must be a multiple of 4 bytes.\nThis area (rtc_retain_mem_t) is reserved and has access from the bootloader and an application.",
                        "id": "BOOTLOADER_CUSTOM_RESERVE_RTC_SIZE",
                        "name": "BOOTLOADER_CUSTOM_RESERVE_RTC_SIZE",
                        "range": null,
                        "title": "Size in bytes for custom purposes",
                        "type": "hex"
                    }
                ],
                "depends_on": null,
                "help": "This option allows the customer to place data in the RTC FAST memory,\nthis area remains valid when rebooted, except for power loss.\nThis memory is located at a fixed address and is available\nfor both the bootloader and the application.\n(The application and bootoloader must be compiled with the same option).\nThe RTC FAST memory has access only through PRO_CPU.",
                "id": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                "name": "BOOTLOADER_CUSTOM_RESERVE_RTC",
                "range": null,
                "title": "Reserve RTC FAST memory for custom purposes",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Perform the startup flow recommended by XMC. Please consult XMC for the details of this flow.\nXMC chips will be forbidden to be used, when this option is disabled.\n\nDON'T DISABLE THIS UNLESS YOU KNOW WHAT YOU ARE DOING.",
                "id": "BOOTLOADER_FLASH_XMC_SUPPORT",
                "name": "BOOTLOADER_FLASH_XMC_SUPPORT",
                "range": null,
                "title": "Enable the support for flash chips of XMC (READ HELP FIRST)",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "bootloader-config",
        "title": "Bootloader config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "help": null,
                "id": "SECURE_SIGNED_ON_BOOT",
                "name": "SECURE_SIGNED_ON_BOOT",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "help": null,
                "id": "SECURE_SIGNED_ON_UPDATE",
                "name": "SECURE_SIGNED_ON_UPDATE",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_ON_BOOT || SECURE_SIGNED_ON_UPDATE",
                "help": null,
                "id": "SECURE_SIGNED_APPS",
                "name": "SECURE_SIGNED_APPS",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "ESP32_REV_MIN_3 || IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                "help": null,
                "id": "SECURE_BOOT_SUPPORTS_RSA",
                "name": "SECURE_BOOT_SUPPORTS_RSA",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                "help": null,
                "id": "SECURE_TARGET_HAS_SECURE_ROM_DL_MODE",
                "name": "SECURE_TARGET_HAS_SECURE_ROM_DL_MODE",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "!SECURE_BOOT",
                "help": "Require apps to be signed to verify their integrity.\n\nThis option uses the same app signature scheme as hardware secure boot, but unlike hardware secure boot it\ndoes not prevent the bootloader from being physically updated. This means that the device can be secured\nagainst remote network access, but not physical access. Compared to using hardware Secure Boot this option\nis much simpler to implement.",
                "id": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "range": null,
                "title": "Require signed app images",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32 && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V1_ENABLED) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "Embeds the ECDSA public key in the bootloader and signs the application with an ECDSA key.\n\nRefer to the documentation before enabling.",
                        "id": "SECURE_SIGNED_APPS_ECDSA_SCHEME",
                        "name": "SECURE_SIGNED_APPS_ECDSA_SCHEME",
                        "range": null,
                        "title": "ECDSA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_SUPPORTS_RSA && (SECURE_SIGNED_APPS_NO_SECURE_BOOT || SECURE_BOOT_V2_ENABLED) && <choice SECURE_SIGNED_APPS_SCHEME>",
                        "help": "Appends the RSA-3072 based Signature block to the application.\nRefer to <Secure Boot Version 2 documentation link> before enabling.",
                        "id": "SECURE_SIGNED_APPS_RSA_SCHEME",
                        "name": "SECURE_SIGNED_APPS_RSA_SCHEME",
                        "range": null,
                        "title": "RSA",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOT || SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "help": "Select the Secure App signing scheme. Depends on the Chip Revision.\nThere are two options:\n1. ECDSA based secure boot scheme. (Only choice for Secure Boot V1)\nSupported in ESP32 and ESP32-ECO3.\n2. The RSA based secure boot scheme. (Only choice for Secure Boot V2)\nSupported in ESP32-ECO3 (ESP32 Chip Revision 3 onwards), ESP32-S2, ESP32-C3, ESP32-S3.",
                "id": "security-features-app-signing-scheme",
                "name": "SECURE_SIGNED_APPS_SCHEME",
                "title": "App Signing Scheme",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT && SECURE_SIGNED_APPS_ECDSA_SCHEME",
                "help": "If this option is set, the bootloader will be compiled with code to verify that an app is signed before\nbooting it.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option doesn't add significant security by itself so most\nusers will want to leave it disabled.",
                "id": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT",
                "range": null,
                "title": "Bootloader verifies app signatures",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT",
                "help": "If this option is set, any OTA updated apps will have the signature verified before being considered valid.\n\nWhen enabled, the signature is automatically checked whenever the esp_ota_ops.h APIs are used for OTA\nupdates, or esp_image_format.h APIs are used to verify apps.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option still adds significant security against network-based\nattackers by preventing spoofing of OTA updates.",
                "id": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "name": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT",
                "range": null,
                "title": "Verify app signature on update",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "IDF_TARGET_ESP32 && <choice SECURE_BOOT_VERSION>",
                                "help": "Build a bootloader which enables secure boot version 1 on first boot.\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                                "id": "SECURE_BOOT_V1_ENABLED",
                                "name": "SECURE_BOOT_V1_ENABLED",
                                "range": null,
                                "title": "Enable Secure Boot version 1",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "SECURE_BOOT_SUPPORTS_RSA && <choice SECURE_BOOT_VERSION>",
                                "help": "Build a bootloader which enables Secure Boot version 2 on first boot.\nRefer to Secure Boot V2 section of the ESP-IDF Programmer's Guide for this version before enabling.",
                                "id": "SECURE_BOOT_V2_ENABLED",
                                "name": "SECURE_BOOT_V2_ENABLED",
                                "range": null,
                                "title": "Enable Secure Boot version 2",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_BOOT",
                        "help": "Select the Secure Boot Version. Depends on the Chip Revision.\nSecure Boot V2 is the new RSA based secure boot scheme.\nSupported in ESP32-ECO3 (ESP32 Chip Revision 3 onwards), ESP32-S2, ESP32-C3 ECO3.\nSecure Boot V1 is the AES based secure boot scheme.\nSupported in ESP32 and ESP32-ECO3.",
                        "id": "security-features-enable-hardware-secure-boot-in-bootloader-read-docs-first--select-secure-boot-version",
                        "name": "SECURE_BOOT_VERSION",
                        "title": "Select secure boot version",
                        "type": "choice"
                    }
                ],
                "depends_on": "IDF_TARGET_ESP32 || IDF_TARGET_ESP32S2 || ESP32C3_REV_MIN_3 || IDF_TARGET_ESP32S3",
                "help": "Build a bootloader which enables Secure Boot on first boot.\n\nOnce enabled, Secure Boot will not boot a modified bootloader. The bootloader will only load a partition\ntable or boot an app if the data has a verified digital signature. There are implications for reflashing\nupdated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.",
                "id": "SECURE_BOOT",
                "name": "SECURE_BOOT",
                "range": null,
                "title": "Enable hardware Secure Boot in bootloader (READ DOCS FIRST)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_MODE>",
                        "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A\ndigest is generated from the bootloader image itself. This digest will be verified on each subsequent\nboot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.",
                        "id": "SECURE_BOOTLOADER_ONE_TIME_FLASH",
                        "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH",
                        "range": null,
                        "title": "One-time flash",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_MODE>",
                        "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing\nkey.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device\nallows reflashing of any device that uses it.",
                        "id": "SECURE_BOOTLOADER_REFLASHABLE",
                        "name": "SECURE_BOOTLOADER_REFLASHABLE",
                        "range": null,
                        "title": "Reflashable",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOT_V1_ENABLED",
                "help": null,
                "id": "security-features-secure-bootloader-mode",
                "name": "SECURE_BOOTLOADER_MODE",
                "title": "Secure bootloader mode",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                        "help": "Path to the key file used to sign app images.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format for Secure Boot V1.\nKey file is an RSA private key in PEM format for Secure Boot V2.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee the Secure Boot section of the ESP-IDF Programmer's Guide for this version for details.",
                        "id": "SECURE_BOOT_SIGNING_KEY",
                        "name": "SECURE_BOOT_SIGNING_KEY",
                        "range": null,
                        "title": "Secure boot private signing key",
                        "type": "string"
                    }
                ],
                "depends_on": "SECURE_SIGNED_APPS",
                "help": "Once secure boot or signed app requirement is enabled, app images are required to be signed.\n\nIf enabled (default), these binary files are signed as part of the build process. The file named in\n\"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py.\nVersion 1 to enable ECDSA Based Secure Boot and Version 2 to enable RSA based Secure Boot.\n(for example, on a remote signing server.)",
                "id": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES",
                "range": null,
                "title": "Sign binaries during build",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "SECURE_SIGNED_APPS && !SECURE_BOOT_BUILD_SIGNED_BINARIES && !SECURE_SIGNED_APPS_RSA_SCHEME",
                "help": "Path to a public key file used to verify signed images.\nSecure Boot V1: This ECDSA public key is compiled into the bootloader and/or\napp, to verify app images.\nSecure Boot V2: This RSA public key is compiled into the signature block at\nthe end of the bootloader/app.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                "id": "SECURE_BOOT_VERIFICATION_KEY",
                "name": "SECURE_BOOT_VERIFICATION_KEY",
                "range": null,
                "title": "Secure boot public signature verification key",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT && (IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3)",
                "help": "If this option is set, ROM bootloader will revoke the public key digest burned in efuse block\nif it fails to verify the signature of software bootloader with it.\nRevocation of keys does not happen when enabling secure boot. Once secure boot is enabled,\nkey revocation checks will be done on subsequent boot-up, while verifying the software bootloader\n\nThis feature provides a strong resistance against physical attacks on the device.\n\nNOTE: Once a digest slot is revoked, it can never be used again to verify an image\nThis can lead to permanent bricking of the device, in case all keys are revoked\nbecause of signature verification failure.",
                "id": "SECURE_BOOT_ENABLE_AGGRESSIVE_KEY_REVOKE",
                "name": "SECURE_BOOT_ENABLE_AGGRESSIVE_KEY_REVOKE",
                "range": null,
                "title": "Enable Aggressive key revoke strategy",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>",
                        "help": null,
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT",
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT",
                        "range": null,
                        "title": "No encoding (256 bit key)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>",
                        "help": null,
                        "id": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT",
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT",
                        "range": null,
                        "title": "3/4 encoding (192 bit key)",
                        "type": "bool"
                    }
                ],
                "depends_on": "SECURE_BOOTLOADER_REFLASHABLE",
                "help": "In reflashable secure bootloader mode, a hardware key is derived from the signing key (with SHA-256) and\ncan be written to eFuse with espefuse.py.\n\nNormally this is a 256-bit key, but if 3/4 Coding Scheme is used on the device then the eFuse key is\ntruncated to 192 bits.\n\nThis configuration item doesn't change any firmware code, it only changes the size of key binary which is\ngenerated at build time.",
                "id": "security-features-hardware-key-encoding",
                "name": "SECURE_BOOTLOADER_KEY_ENCODING",
                "title": "Hardware Key Encoding",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": "SECURE_BOOT",
                "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a\ncustom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to the Secure Boot section of the ESP-IDF Programmer's Guide for this version before enabling.",
                "id": "SECURE_BOOT_INSECURE",
                "name": "SECURE_BOOT_INSECURE",
                "range": null,
                "title": "Allow potentially insecure options",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES128",
                                "name": "SECURE_FLASH_ENCRYPTION_AES128",
                                "range": null,
                                "title": "AES-128 (256-bit key)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_KEYSIZE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_AES256",
                                "name": "SECURE_FLASH_ENCRYPTION_AES256",
                                "range": null,
                                "title": "AES-256 (512-bit key)",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "(IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32S3) && SECURE_FLASH_ENC_ENABLED",
                        "help": "Size of generated AES-XTS key.\n\nAES-128 uses a 256-bit key (32 bytes) which occupies one Efuse key block.\nAES-256 uses a 512-bit key (64 bytes) which occupies two Efuse key blocks.\n\nThis setting is ignored if either type of key is already burned to Efuse before the first boot.\nIn this case, the pre-burned key is used and no new key is generated.",
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--size-of-generated-aes-xts-key",
                        "name": "SECURE_FLASH_ENCRYPTION_KEYSIZE",
                        "title": "Size of generated AES-XTS key",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                                "range": null,
                                "title": "Development (NOT SECURE)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice SECURE_FLASH_ENCRYPTION_MODE>",
                                "help": null,
                                "id": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE",
                                "name": "SECURE_FLASH_ENCRYPTION_MODE_RELEASE",
                                "range": null,
                                "title": "Release",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "SECURE_FLASH_ENC_ENABLED",
                        "help": "By default Development mode is enabled which allows ROM download mode to perform flash encryption\noperations (plaintext is sent to the device, and it encrypts it internally and writes ciphertext\nto flash.) This mode is not secure, it's possible for an attacker to write their own chosen plaintext\nto flash.\n\nRelease mode should always be selected for production or manufacturing. Once enabled it's no longer\npossible for the device in ROM Download Mode to use the flash encryption hardware.\n\nRefer to the Flash Encryption section of the ESP-IDF Programmer's Guide for details.",
                        "id": "security-features-enable-flash-encryption-on-boot-read-docs-first--enable-usage-mode",
                        "name": "SECURE_FLASH_ENCRYPTION_MODE",
                        "title": "Enable usage mode",
                        "type": "choice"
                    }
                ],
                "depends_on": null,
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html\nbefore enabling.",
                "id": "SECURE_FLASH_ENC_ENABLED",
                "name": "SECURE_FLASH_ENC_ENABLED",
                "range": null,
                "title": "Enable flash encryption on boot (READ DOCS FIRST)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "(SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT) && IDF_TARGET_ESP32",
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via eFuse.\n\nIf this option is set, this eFuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.",
                        "id": "SECURE_BOOT_ALLOW_ROM_BASIC",
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC",
                        "range": null,
                        "title": "Leave ROM BASIC Interpreter available on reset",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE || SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot\nwhen either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption\nand some of the protections of secure boot.\n\nOnly set this option in testing environments.",
                        "id": "SECURE_BOOT_ALLOW_JTAG",
                        "name": "SECURE_BOOT_ALLOW_JTAG",
                        "range": null,
                        "title": "Allow JTAG Debugging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE",
                        "help": "If not set (default), app partition size must be a multiple of 64KB. App images are padded to 64KB\nlength, and the bootloader checks any trailing bytes after the signature (before the next 64KB\nboundary) have not been written. This is because flash cache maps entire 64KB pages into the address\nspace. This prevents an attacker from appending unverified data after the app image in the flash,\ncausing it to be mapped into the address space.\n\nSetting this option allows the app partition length to be unaligned, and disables padding of the app\nimage to this length. It is generally not recommended to set this option, unless you have a legacy\npartitioning scheme which doesn't support 64KB aligned partition lengths.",
                        "id": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION",
                        "name": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION",
                        "range": null,
                        "title": "Allow app partition length not 64KB aligned",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE && SECURE_BOOT_V2_ENABLED",
                        "help": "If not set (default, recommended), on first boot the bootloader will burn the WR_DIS_RD_DIS\nefuse when Secure Boot is enabled. This prevents any more efuses from being read protected.\n\nIf this option is set, it will remain possible to write the EFUSE_RD_DIS efuse field after Secure\nBoot is enabled. This may allow an attacker to read-protect the BLK2 efuse (for ESP32) and\nBLOCK4-BLOCK10 (i.e. BLOCK_KEY0-BLOCK_KEY5)(for other chips) holding the public key digest, causing an\nimmediate denial of service and possibly allowing an additional fault injection attack to\nbypass the signature protection.\n\nNOTE: Once a BLOCK is read-protected, the application will read all zeros from that block\n\nNOTE: If \"UART ROM download mode (Permanently disabled (recommended))\" or\n\"UART ROM download mode (Permanently switch to Secure mode (recommended))\" is set,\nthen it is __NOT__ possible to read/write efuses using espefuse.py utility.\nHowever, efuse can be read/written from the application",
                        "id": "SECURE_BOOT_V2_ALLOW_EFUSE_RD_DIS",
                        "name": "SECURE_BOOT_V2_ALLOW_EFUSE_RD_DIS",
                        "range": null,
                        "title": "Allow additional read protecting of efuses",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_BOOT_INSECURE && !IDF_TARGET_ESP32",
                        "help": "If not set (default), during startup in the app all unused digest slots will be revoked.\nTo revoke unused slot will be called esp_efuse_set_digest_revoke(num_digest) for each digest.\nRevoking unused digest slots makes ensures that no trusted keys can be added later by an attacker.\nIf set, it means that you have a plan to use unused digests slots later.",
                        "id": "SECURE_BOOT_ALLOW_UNUSED_DIGEST_SLOTS",
                        "name": "SECURE_BOOT_ALLOW_UNUSED_DIGEST_SLOTS",
                        "range": null,
                        "title": "Leave unused digest slots available (not revoke)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_ENC",
                        "range": null,
                        "title": "Leave UART bootloader encryption enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT && IDF_TARGET_ESP32",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on\nfirst boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash\nencryption.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_DEC",
                        "range": null,
                        "title": "Leave UART bootloader decryption enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on\nfirst boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.",
                        "id": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE",
                        "name": "SECURE_FLASH_UART_BOOTLOADER_ALLOW_CACHE",
                        "range": null,
                        "title": "Leave UART bootloader flash cache enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT",
                        "help": "If not set (default), and flash encryption is not yet enabled in eFuses, the 2nd stage bootloader\nwill enable flash encryption: generate the flash encryption key and program eFuses.\nIf this option is set, and flash encryption is not yet enabled, the bootloader will error out and\nreboot.\nIf flash encryption is enabled in eFuses, this option does not change the bootloader behavior.\n\nOnly use this option in testing environments, to avoid accidentally enabling flash encryption on\nthe wrong device. The device needs to have flash encryption already enabled using espefuse.py.",
                        "id": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                        "name": "SECURE_FLASH_REQUIRE_ALREADY_ENABLED",
                        "range": null,
                        "title": "Require flash encryption to be already enabled",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "security-features-potentially-insecure-options",
                "title": "Potentially insecure options",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": "SECURE_FLASH_ENC_ENABLED",
                "help": "If set (default), in an app during startup code,\nthere is a check of the flash encryption eFuse bit is on\n(as the bootloader should already have set it).\nThe app requires this bit is on to continue work otherwise abort.\n\nIf not set, the app does not care if the flash encryption eFuse bit is set or not.",
                "id": "SECURE_FLASH_CHECK_ENC_EN_IN_APP",
                "name": "SECURE_FLASH_CHECK_ENC_EN_IN_APP",
                "range": null,
                "title": "Check Flash Encryption enabled on app startup",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_UART_ROM_DL_MODE>",
                        "help": "If set, during startup the app will burn an eFuse bit to permanently disable the UART ROM\nDownload Mode. This prevents any future use of esptool.py, espefuse.py and similar tools.\n\nOnce disabled, if the SoC is booted with strapping pins set for ROM Download Mode\nthen an error is printed instead.\n\nIt is recommended to enable this option in any production application where Flash\nEncryption and/or Secure Boot is enabled and access to Download Mode is not required.\n\nIt is also possible to permanently disable Download Mode by calling\nesp_efuse_disable_rom_download_mode() at runtime.",
                        "id": "SECURE_DISABLE_ROM_DL_MODE",
                        "name": "SECURE_DISABLE_ROM_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Permanently disabled (recommended))",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "SECURE_TARGET_HAS_SECURE_ROM_DL_MODE && <choice SECURE_UART_ROM_DL_MODE>",
                        "help": "If set, during startup the app will burn an eFuse bit to permanently switch the UART ROM\nDownload Mode into a separate Secure Download mode. This option can only work if\nDownload Mode is not already disabled by eFuse.\n\nSecure Download mode limits the use of Download Mode functions to simple flash read,\nwrite and erase operations, plus a command to return a summary of currently enabled\nsecurity features.\n\nSecure Download mode is not compatible with the esptool.py flasher stub feature,\nespefuse.py, read/writing memory or registers, encrypted download, or any other\nfeatures that interact with unsupported Download Mode commands.\n\nSecure Download mode should be enabled in any application where Flash Encryption\nand/or Secure Boot is enabled. Disabling this option does not immediately cancel\nthe benefits of the security features, but it increases the potential \"attack\nsurface\" for an attacker to try and bypass them with a successful physical attack.\n\nIt is also possible to enable secure download mode at runtime by calling\nesp_efuse_enable_rom_secure_download_mode()\n\nNote: Secure Download mode is not available for ESP32 (includes revisions till ECO3).",
                        "id": "SECURE_ENABLE_SECURE_ROM_DL_MODE",
                        "name": "SECURE_ENABLE_SECURE_ROM_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Permanently switch to Secure mode (recommended))",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice SECURE_UART_ROM_DL_MODE>",
                        "help": "This is a potentially insecure option.\nEnabling this option will allow the full UART download mode to stay enabled.\nThis option SHOULD NOT BE ENABLED for production use cases.",
                        "id": "SECURE_INSECURE_ALLOW_DL_MODE",
                        "name": "SECURE_INSECURE_ALLOW_DL_MODE",
                        "range": null,
                        "title": "UART ROM download mode (Enabled (not recommended))",
                        "type": "bool"
                    }
                ],
                "depends_on": "(SECURE_BOOT_V2_ENABLED || SECURE_FLASH_ENC_ENABLED) && (!IDF_TARGET_ESP32 || ESP32_REV_MIN_3)",
                "help": null,
                "id": "security-features-uart-rom-download-mode",
                "name": "SECURE_UART_ROM_DL_MODE",
                "title": "UART ROM download mode",
                "type": "choice"
            }
        ],
        "depends_on": null,
        "id": "security-features",
        "title": "Security features",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Always print ROM logs, this is the default behavior.",
                        "id": "BOOT_ROM_LOG_ALWAYS_ON",
                        "name": "BOOT_ROM_LOG_ALWAYS_ON",
                        "range": null,
                        "title": "Always Log",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Don't print ROM logs.",
                        "id": "BOOT_ROM_LOG_ALWAYS_OFF",
                        "name": "BOOT_ROM_LOG_ALWAYS_OFF",
                        "range": null,
                        "title": "Permanently disable logging",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Print ROM logs when GPIO level is high during start up.\nThe GPIO number is chip dependent,\ne.g. on ESP32-S2, the control GPIO is GPIO46.",
                        "id": "BOOT_ROM_LOG_ON_GPIO_HIGH",
                        "name": "BOOT_ROM_LOG_ON_GPIO_HIGH",
                        "range": null,
                        "title": "Log on GPIO High",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice BOOT_ROM_LOG_SCHEME>",
                        "help": "Print ROM logs when GPIO level is low during start up.\nThe GPIO number is chip dependent,\ne.g. on ESP32-S2, the control GPIO is GPIO46.",
                        "id": "BOOT_ROM_LOG_ON_GPIO_LOW",
                        "name": "BOOT_ROM_LOG_ON_GPIO_LOW",
                        "range": null,
                        "title": "Log on GPIO Low",
                        "type": "bool"
                    }
                ],
                "depends_on": "!IDF_TARGET_ESP32",
                "help": "Controls the Boot ROM log behavior.\nThe rom log behavior can only be changed for once,\nspecific eFuse bit(s) will be burned at app boot stage.",
                "id": "boot-rom-behavior-permanently-change-boot-rom-output",
                "name": "BOOT_ROM_LOG_SCHEME",
                "title": "Permanently change Boot ROM output",
                "type": "choice"
            }
        ],
        "depends_on": null,
        "id": "boot-rom-behavior",
        "title": "Boot ROM Behavior",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "The serial port that's connected to the ESP chip. This can be overridden by setting the ESPPORT\nenvironment variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.",
                "id": "ESPTOOLPY_PORT",
                "name": "ESPTOOLPY_PORT",
                "range": null,
                "title": "Default serial port",
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_115200B",
                        "name": "ESPTOOLPY_BAUD_115200B",
                        "range": null,
                        "title": "115200 baud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_230400B",
                        "name": "ESPTOOLPY_BAUD_230400B",
                        "range": null,
                        "title": "230400 baud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_921600B",
                        "name": "ESPTOOLPY_BAUD_921600B",
                        "range": null,
                        "title": "921600 baud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_2MB",
                        "name": "ESPTOOLPY_BAUD_2MB",
                        "range": null,
                        "title": "2Mbaud",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_BAUD_OTHER",
                        "name": "ESPTOOLPY_BAUD_OTHER",
                        "range": null,
                        "title": "Other baud rate",
                        "type": "bool"
                    }
                ],
                "depends_on": "!IDF_CMAKE",
                "help": "Default baud rate to use while communicating with the ESP chip. Can be overridden by\nsetting the ESPBAUD variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.",
                "id": "serial-flasher-config-default-baud-rate",
                "name": "ESPTOOLPY_BAUD",
                "title": "Default baud rate",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_BAUD_OTHER_VAL",
                "name": "ESPTOOLPY_BAUD_OTHER_VAL",
                "range": null,
                "title": "Other baud rate value",
                "type": "int"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": null,
                "id": "ESPTOOLPY_BAUD",
                "name": "ESPTOOLPY_BAUD",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": "!IDF_CMAKE",
                "help": "The flasher tool can send data compressed using zlib, letting the ROM on the ESP chip\ndecompress it on the fly before flashing it. For most payloads, this should result in a\nspeed increase.",
                "id": "ESPTOOLPY_COMPRESSED",
                "name": "ESPTOOLPY_COMPRESSED",
                "range": null,
                "title": "Use compressed upload",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The flasher tool sends a precompiled download stub first by default. That stub allows things\nlike compressed downloads and more. Usually you should not need to disable that feature",
                "id": "ESPTOOLPY_NO_STUB",
                "name": "ESPTOOLPY_NO_STUB",
                "range": null,
                "title": "Disable download stub",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ESP32S3",
                "help": null,
                "id": "ESPTOOLPY_OCT_FLASH",
                "name": "ESPTOOLPY_OCT_FLASH",
                "range": null,
                "title": "Enable Octal Flash",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_QIO",
                        "name": "ESPTOOLPY_FLASHMODE_QIO",
                        "range": null,
                        "title": "QIO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_QOUT",
                        "name": "ESPTOOLPY_FLASHMODE_QOUT",
                        "range": null,
                        "title": "QOUT",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_DIO",
                        "name": "ESPTOOLPY_FLASHMODE_DIO",
                        "range": null,
                        "title": "DIO",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_DOUT",
                        "name": "ESPTOOLPY_FLASHMODE_DOUT",
                        "range": null,
                        "title": "DOUT",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASHMODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHMODE_OPI",
                        "name": "ESPTOOLPY_FLASHMODE_OPI",
                        "range": null,
                        "title": "OPI",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.",
                "id": "serial-flasher-config-flash-spi-mode",
                "name": "ESPTOOLPY_FLASHMODE",
                "title": "Flash SPI mode",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASH_SAMPLE_MODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASH_SAMPLE_MODE_STR",
                        "name": "ESPTOOLPY_FLASH_SAMPLE_MODE_STR",
                        "range": null,
                        "title": "STR Mode",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "ESPTOOLPY_OCT_FLASH && <choice ESPTOOLPY_FLASH_SAMPLE_MODE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASH_SAMPLE_MODE_DTR",
                        "name": "ESPTOOLPY_FLASH_SAMPLE_MODE_DTR",
                        "range": null,
                        "title": "DTR Mode",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": null,
                "id": "serial-flasher-config-flash-sampling-mode",
                "name": "ESPTOOLPY_FLASH_SAMPLE_MODE",
                "title": "Flash Sampling Mode",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_FLASHMODE",
                "name": "ESPTOOLPY_FLASHMODE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ESP32S3 && ESPTOOLPY_FLASH_SAMPLE_MODE_STR && <choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_120M",
                        "name": "ESPTOOLPY_FLASHFREQ_120M",
                        "range": null,
                        "title": "120 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_80M",
                        "name": "ESPTOOLPY_FLASHFREQ_80M",
                        "range": null,
                        "title": "80 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_40M",
                        "name": "ESPTOOLPY_FLASHFREQ_40M",
                        "range": null,
                        "title": "40 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "(IDF_TARGET_ESP32 || IDF_TARGET_ESP32S2 || IDF_TARGET_ESP32C3) && <choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_26M",
                        "name": "ESPTOOLPY_FLASHFREQ_26M",
                        "range": null,
                        "title": "26 MHz",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHFREQ_20M",
                        "name": "ESPTOOLPY_FLASHFREQ_20M",
                        "range": null,
                        "title": "20 MHz",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "The SPI flash frequency to be used.",
                "id": "serial-flasher-config-flash-spi-speed",
                "name": "ESPTOOLPY_FLASHFREQ",
                "title": "Flash SPI speed",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_FLASHFREQ",
                "name": "ESPTOOLPY_FLASHFREQ",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_1MB",
                        "name": "ESPTOOLPY_FLASHSIZE_1MB",
                        "range": null,
                        "title": "1 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_2MB",
                        "name": "ESPTOOLPY_FLASHSIZE_2MB",
                        "range": null,
                        "title": "2 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_4MB",
                        "name": "ESPTOOLPY_FLASHSIZE_4MB",
                        "range": null,
                        "title": "4 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_8MB",
                        "name": "ESPTOOLPY_FLASHSIZE_8MB",
                        "range": null,
                        "title": "8 MB",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>",
                        "help": null,
                        "id": "ESPTOOLPY_FLASHSIZE_16MB",
                        "name": "ESPTOOLPY_FLASHSIZE_16MB",
                        "range": null,
                        "title": "16 MB",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "SPI flash size, in megabytes",
                "id": "serial-flasher-config-flash-size",
                "name": "ESPTOOLPY_FLASHSIZE",
                "title": "Flash size",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_FLASHSIZE",
                "name": "ESPTOOLPY_FLASHSIZE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If this option is set, flashing the project will automatically detect\nthe flash size of the target chip and update the bootloader image\nbefore it is flashed.",
                "id": "ESPTOOLPY_FLASHSIZE_DETECT",
                "name": "ESPTOOLPY_FLASHSIZE_DETECT",
                "range": null,
                "title": "Detect flash size when flashing bootloader",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BEFORE>",
                        "help": null,
                        "id": "ESPTOOLPY_BEFORE_RESET",
                        "name": "ESPTOOLPY_BEFORE_RESET",
                        "range": null,
                        "title": "Reset to bootloader",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_BEFORE>",
                        "help": null,
                        "id": "ESPTOOLPY_BEFORE_NORESET",
                        "name": "ESPTOOLPY_BEFORE_NORESET",
                        "range": null,
                        "title": "No reset",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.",
                "id": "serial-flasher-config-before-flashing",
                "name": "ESPTOOLPY_BEFORE",
                "title": "Before flashing",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_BEFORE",
                "name": "ESPTOOLPY_BEFORE",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_AFTER>",
                        "help": null,
                        "id": "ESPTOOLPY_AFTER_RESET",
                        "name": "ESPTOOLPY_AFTER_RESET",
                        "range": null,
                        "title": "Reset after flashing",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_AFTER>",
                        "help": null,
                        "id": "ESPTOOLPY_AFTER_NORESET",
                        "name": "ESPTOOLPY_AFTER_NORESET",
                        "range": null,
                        "title": "Stay in bootloader",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Configure whether esptool.py should reset the ESP32 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.",
                "id": "serial-flasher-config-after-flashing",
                "name": "ESPTOOLPY_AFTER",
                "title": "After flashing",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_AFTER",
                "name": "ESPTOOLPY_AFTER",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_CONSOLE",
                        "name": "ESPTOOLPY_MONITOR_BAUD_CONSOLE",
                        "range": null,
                        "title": "Same as UART console baud rate",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_9600B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_9600B",
                        "range": null,
                        "title": "9600 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_57600B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_57600B",
                        "range": null,
                        "title": "57600 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_115200B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_115200B",
                        "range": null,
                        "title": "115200 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_230400B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_230400B",
                        "range": null,
                        "title": "230400 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_921600B",
                        "name": "ESPTOOLPY_MONITOR_BAUD_921600B",
                        "range": null,
                        "title": "921600 bps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_2MB",
                        "name": "ESPTOOLPY_MONITOR_BAUD_2MB",
                        "range": null,
                        "title": "2 Mbps",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice ESPTOOLPY_MONITOR_BAUD>",
                        "help": null,
                        "id": "ESPTOOLPY_MONITOR_BAUD_OTHER",
                        "name": "ESPTOOLPY_MONITOR_BAUD_OTHER",
                        "range": null,
                        "title": "Custom baud rate",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Baud rate to use when running 'idf.py monitor' or 'make monitor'\nto view serial output from a running chip.\n\nIf \"Same as UART Console baud rate\" is chosen then the value will\nfollow the \"UART Console baud rate\" config item.\n\nCan override by setting the MONITORBAUD environment variable.",
                "id": "serial-flasher-config--idf-py-monitor-baud-rate",
                "name": "ESPTOOLPY_MONITOR_BAUD",
                "title": "'idf.py monitor' baud rate",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL",
                "name": "ESPTOOLPY_MONITOR_BAUD_OTHER_VAL",
                "range": null,
                "title": "Custom baud rate value",
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "ESPTOOLPY_MONITOR_BAUD",
                "name": "ESPTOOLPY_MONITOR_BAUD",
                "range": null,
                "title": null,
                "type": "int"
            }
        ],
        "depends_on": null,
        "id": "serial-flasher-config",
        "title": "Serial flasher config",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is the default partition table, designed to fit into a 2MB or\nlarger flash with a single 1MB app partition.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp.csv\n\nThis partition table is not suitable for an app that needs OTA\n(over the air update) capability.",
                        "id": "PARTITION_TABLE_SINGLE_APP",
                        "name": "PARTITION_TABLE_SINGLE_APP",
                        "range": null,
                        "title": "Single factory app, no OTA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default partition table, that expands\nthe 1MB app partition size to 1.5MB to fit more code.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_large.csv\n\nThis partition table is not suitable for an app that needs OTA\n(over the air update) capability.",
                        "id": "PARTITION_TABLE_SINGLE_APP_LARGE",
                        "name": "PARTITION_TABLE_SINGLE_APP_LARGE",
                        "range": null,
                        "title": "Single factory app (large), no OTA",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "This is a basic OTA-enabled partition table with a factory app\npartition plus two OTA app partitions. All are 1MB, so this\npartition table requires 4MB or larger flash size.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota.csv",
                        "id": "PARTITION_TABLE_TWO_OTA",
                        "name": "PARTITION_TABLE_TWO_OTA",
                        "range": null,
                        "title": "Factory app, two OTA definitions",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice PARTITION_TABLE_TYPE>",
                        "help": "Specify the path to the partition table CSV to use for your project.\n\nConsult the Partition Table section in the ESP-IDF Programmers Guide\nfor more information.",
                        "id": "PARTITION_TABLE_CUSTOM",
                        "name": "PARTITION_TABLE_CUSTOM",
                        "range": null,
                        "title": "Custom partition table CSV",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_COREDUMP_ENABLE_TO_FLASH && NVS_ENCRYPTION && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the default \"Single factory app, no OTA\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_encr_nvs.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_ENCRYPTED_NVS",
                        "name": "PARTITION_TABLE_SINGLE_APP_ENCRYPTED_NVS",
                        "range": null,
                        "title": "Single factory app, no OTA, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP32_COREDUMP_ENABLE_TO_FLASH && NVS_ENCRYPTION && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the \"Single factory app (large), no OTA\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_singleapp_large_encr_nvs.csv",
                        "id": "PARTITION_TABLE_SINGLE_APP_LARGE_ENC_NVS",
                        "name": "PARTITION_TABLE_SINGLE_APP_LARGE_ENC_NVS",
                        "range": null,
                        "title": "Single factory app (large), no OTA, encrypted NVS",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "!ESP_COREDUMP_ENABLE_TO_FLASH && NVS_ENCRYPTION && <choice PARTITION_TABLE_TYPE>",
                        "help": "This is a variation of the \"Factory app, two OTA definitions\" partition table\nthat supports encrypted NVS when using flash encryption. See the Flash Encryption section\nin the ESP-IDF Programmers Guide for more information.\n\nThe corresponding CSV file in the IDF directory is\ncomponents/partition_table/partitions_two_ota_encr_nvs.csv",
                        "id": "PARTITION_TABLE_TWO_OTA_ENCRYPTED_NVS",
                        "name": "PARTITION_TABLE_TWO_OTA_ENCRYPTED_NVS",
                        "range": null,
                        "title": "Factory app, two OTA definitions, encrypted NVS",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. These are mostly intended\nfor example and development use, it's expect that for production use you\nwill copy one of these CSV files and create a custom partition CSV for\nyour application.",
                "id": "partition-table-partition-table",
                "name": "PARTITION_TABLE_TYPE",
                "title": "Partition Table",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Name of the custom partition CSV filename. This path is evaluated\nrelative to the project root directory.",
                "id": "PARTITION_TABLE_CUSTOM_FILENAME",
                "name": "PARTITION_TABLE_CUSTOM_FILENAME",
                "range": null,
                "title": "Custom partition CSV file",
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "PARTITION_TABLE_FILENAME",
                "name": "PARTITION_TABLE_FILENAME",
                "range": null,
                "title": null,
                "type": "string"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "The address of partition table (by default 0x8000).\nAllows you to move the partition table, it gives more space for the bootloader.\nNote that the bootloader and app will both need to be compiled with the same PARTITION_TABLE_OFFSET value.\n\nThis number should be a multiple of 0x1000.\n\nNote that partition offsets in the partition table CSV file may need to be changed if this value is set to\na higher value. To have each partition offset adapt to the configured partition table offset, leave all\npartition offsets blank in the CSV file.",
                "id": "PARTITION_TABLE_OFFSET",
                "name": "PARTITION_TABLE_OFFSET",
                "range": null,
                "title": "Offset of partition table",
                "type": "hex"
            },
            {
                "children": [],
                "depends_on": "!ESP32_COMPATIBLE_PRE_V3_1_BOOTLOADERS",
                "help": "Generate an MD5 checksum for the partition table for protecting the\nintegrity of the table. The generation should be turned off for legacy\nbootloaders which cannot recognize the MD5 checksum in the partition\ntable.",
                "id": "PARTITION_TABLE_MD5",
                "name": "PARTITION_TABLE_MD5",
                "range": null,
                "title": "Generate an MD5 checksum for the partition table",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "partition-table",
        "title": "Partition Table",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_DEFAULT",
                        "name": "COMPILER_OPTIMIZATION_DEFAULT",
                        "range": null,
                        "title": "Debug (-Og)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_SIZE",
                        "name": "COMPILER_OPTIMIZATION_SIZE",
                        "range": null,
                        "title": "Optimize for size (-Os)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_PERF",
                        "name": "COMPILER_OPTIMIZATION_PERF",
                        "range": null,
                        "title": "Optimize for performance (-O2)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION>",
                        "help": null,
                        "id": "COMPILER_OPTIMIZATION_NONE",
                        "name": "COMPILER_OPTIMIZATION_NONE",
                        "range": null,
                        "title": "Debug without optimization (-O0)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "This option sets compiler optimization level (gcc -O argument) for the app.\n\n- The \"Default\" setting will add the -0g flag to CFLAGS.\n- The \"Size\" setting will add the -0s flag to CFLAGS.\n- The \"Performance\" setting will add the -O2 flag to CFLAGS.\n- The \"None\" setting will add the -O0 flag to CFLAGS.\n\nThe \"Size\" setting cause the compiled code to be smaller and faster, but\nmay lead to difficulties of correlating code addresses to source file\nlines when debugging.\n\nThe \"Performance\" setting causes the compiled code to be larger and faster,\nbut will be easier to correlated code addresses to source file lines.\n\n\"None\" with -O0 produces compiled code without optimization.\n\nNote that custom optimization levels may be unsupported.\n\nCompiler optimization for the IDF bootloader is set separately,\nsee the BOOTLOADER_COMPILER_OPTIMIZATION setting.",
                "id": "compiler-options-optimization-level",
                "name": "COMPILER_OPTIMIZATION",
                "title": "Optimization Level",
                "type": "choice"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",
                        "range": null,
                        "title": "Enabled",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_SILENT",
                        "range": null,
                        "title": "Silent (saves code size)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_OPTIMIZATION_ASSERTION_LEVEL>",
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.",
                        "id": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "name": "COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE",
                        "range": null,
                        "title": "Disabled (sets -DNDEBUG)",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.",
                "id": "compiler-options-assertion-level",
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "title": "Assertion level",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": null,
                "id": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "name": "COMPILER_OPTIMIZATION_ASSERTION_LEVEL",
                "range": null,
                "title": null,
                "type": "int"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, the error messages will be discarded in following check macros:\n- ESP_RETURN_ON_ERROR\n- ESP_EXIT_ON_ERROR\n- ESP_RETURN_ON_FALSE\n- ESP_EXIT_ON_FALSE",
                "id": "COMPILER_OPTIMIZATION_CHECKS_SILENT",
                "name": "COMPILER_OPTIMIZATION_CHECKS_SILENT",
                "range": null,
                "title": "Disable messages in ESP_RETURN_ON_* and ESP_EXIT_ON_* macros",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_CMAKE",
                "help": "When expanding the __FILE__ and __BASE_FILE__ macros, replace paths inside ESP-IDF\nwith paths relative to the placeholder string \"IDF\", and convert paths inside the\nproject directory to relative paths.\n\nThis allows building the project with assertions or other code that embeds file paths,\nwithout the binary containing the exact path to the IDF or project directories.\n\nThis option passes -fmacro-prefix-map options to the GCC command line. To replace additional\npaths in your binaries, modify the project CMakeLists.txt file to pass custom -fmacro-prefix-map or\n-ffile-prefix-map arguments.",
                "id": "COMPILER_HIDE_PATHS_MACROS",
                "is_menuconfig": true,
                "name": "COMPILER_HIDE_PATHS_MACROS",
                "range": null,
                "title": "Replace ESP-IDF and project paths in binaries",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "COMPILER_CXX_EXCEPTIONS",
                        "help": "Size (in bytes) of the emergency memory pool for C++ exceptions. This pool will be used to allocate\nmemory for thrown exceptions when there is not enough memory on the heap.",
                        "id": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE",
                        "name": "COMPILER_CXX_EXCEPTIONS_EMG_POOL_SIZE",
                        "range": null,
                        "title": "Emergency Pool Size",
                        "type": "int"
                    }
                ],
                "depends_on": null,
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code\nwhich throws an exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.",
                "id": "COMPILER_CXX_EXCEPTIONS",
                "is_menuconfig": true,
                "name": "COMPILER_CXX_EXCEPTIONS",
                "range": null,
                "title": "Enable C++ exceptions",
                "type": "menu"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enabling this option compiles all C++ files with RTTI support enabled.\nThis increases binary size (typically by tens of kB) but allows using\ndynamic_cast conversion and typeid operator.",
                "id": "COMPILER_CXX_RTTI",
                "name": "COMPILER_CXX_RTTI",
                "range": null,
                "title": "Enable C++ run-time type info (RTTI)",
                "type": "bool"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_NONE",
                        "name": "COMPILER_STACK_CHECK_MODE_NONE",
                        "range": null,
                        "title": "None",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_NORM",
                        "name": "COMPILER_STACK_CHECK_MODE_NORM",
                        "range": null,
                        "title": "Normal",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_STRONG",
                        "name": "COMPILER_STACK_CHECK_MODE_STRONG",
                        "range": null,
                        "title": "Strong",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "<choice COMPILER_STACK_CHECK_MODE>",
                        "help": null,
                        "id": "COMPILER_STACK_CHECK_MODE_ALL",
                        "name": "COMPILER_STACK_CHECK_MODE_ALL",
                        "range": null,
                        "title": "Overall",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca, and functions with\n  buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes additional functions\n  to be protected -- those that have local array definitions, or have references to local frame\n  addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n\nThe performance impact includes increasing the amount of stack memory required for each task.",
                "id": "compiler-options-stack-smashing-protection-mode",
                "name": "COMPILER_STACK_CHECK_MODE",
                "title": "Stack smashing protection mode",
                "type": "choice"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Stack smashing protection.",
                "id": "COMPILER_STACK_CHECK",
                "name": "COMPILER_STACK_CHECK",
                "range": null,
                "title": null,
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.",
                "id": "COMPILER_WARN_WRITE_STRINGS",
                "name": "COMPILER_WARN_WRITE_STRINGS",
                "range": null,
                "title": "Enable -Wwrite-strings warning flag",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": "IDF_TARGET_ARCH_RISCV",
                "help": "Adds -msave-restore to C/C++ compilation flags.\n\nWhen this flag is enabled, compiler will call library functions to\nsave/restore registers in function prologues/epilogues. This results\nin lower overall code size, at the expense of slightly reduced performance.\n\nThis option can be enabled for RISC-V targets only.",
                "id": "COMPILER_SAVE_RESTORE_LIBCALLS",
                "name": "COMPILER_SAVE_RESTORE_LIBCALLS",
                "range": null,
                "title": "Enable -msave-restore flag to reduce code size",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "Enable this option if using GCC 6 or newer, and wanting to disable warnings which don't appear with\nGCC 5.",
                "id": "COMPILER_DISABLE_GCC8_WARNINGS",
                "name": "COMPILER_DISABLE_GCC8_WARNINGS",
                "range": null,
                "title": "Disable new warnings introduced in GCC 6 - 8",
                "type": "bool"
            },
            {
                "children": [],
                "depends_on": null,
                "help": "If enabled, RTL files will be produced during compilation. These files\ncan be used by other tools, for example to calculate call graphs.",
                "id": "COMPILER_DUMP_RTL_FILES",
                "name": "COMPILER_DUMP_RTL_FILES",
                "range": null,
                "title": "Dump RTL files during compilation",
                "type": "bool"
            }
        ],
        "depends_on": null,
        "id": "compiler-options",
        "title": "Compiler options",
        "type": "menu"
    },
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice APPTRACE_DESTINATION>",
                                "help": null,
                                "id": "APPTRACE_DEST_JTAG",
                                "name": "APPTRACE_DEST_JTAG",
                                "range": null,
                                "title": "JTAG",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice APPTRACE_DESTINATION>",
                                "help": null,
                                "id": "APPTRACE_DEST_NONE",
                                "name": "APPTRACE_DEST_NONE",
                                "range": null,
                                "title": "None",
                                "type": "bool"
                            }
                        ],
                        "depends_on": null,
                        "help": "Select destination for application trace: JTAG or none (to disable).",
                        "id": "component-config-application-level-tracing-data-destination",
                        "name": "APPTRACE_DESTINATION",
                        "title": "Data Destination",
                        "type": "choice"
                    },
                    {
                        "children": [],
                        "depends_on": "IDF_TARGET_ARCH_XTENSA && !ESP32_TRAX && !ESP32S2_TRAX && !ESP32S3_TRAX",
                        "help": "Enables/disable TRAX tracing HW.",
                        "id": "APPTRACE_DEST_TRAX",
                        "name": "APPTRACE_DEST_TRAX",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable swapping memory buffers tracing protocol.",
                        "id": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE",
                        "name": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable application tracing module.",
                        "id": "APPTRACE_ENABLE",
                        "name": "APPTRACE_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": null,
                        "help": "Enables/disable application tracing module internal sync lock.",
                        "id": "APPTRACE_LOCK_ENABLE",
                        "name": "APPTRACE_LOCK_ENABLE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_ENABLE",
                        "help": "Timeout for flushing last trace data to host in case of panic. In ms.\nUse -1 to disable timeout and wait forever.",
                        "id": "APPTRACE_ONPANIC_HOST_FLUSH_TMO",
                        "name": "APPTRACE_ONPANIC_HOST_FLUSH_TMO",
                        "range": null,
                        "title": "Timeout for flushing last trace data to host on panic",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_ENABLE",
                        "help": "Threshold for flushing last trace data to host on panic in post-mortem mode.\nThis is minimal amount of data needed to perform flush. In bytes.",
                        "id": "APPTRACE_POSTMORTEM_FLUSH_THRESH",
                        "name": "APPTRACE_POSTMORTEM_FLUSH_THRESH",
                        "range": null,
                        "title": "Threshold for flushing last trace data to host on panic",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE && !APPTRACE_DEST_TRAX",
                        "help": "Size of the memory buffer for trace data in bytes.",
                        "id": "APPTRACE_BUF_SIZE",
                        "name": "APPTRACE_BUF_SIZE",
                        "range": null,
                        "title": "Size of the apptrace buffer",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_MEMBUFS_APPTRACE_PROTO_ENABLE",
                        "help": "Size of the buffer for events in bytes. It is useful for buffering events from\nthe time critical code (scheduler, ISRs etc). If this parameter is 0 then\nevents will be discarded when main HW buffer is full.",
                        "id": "APPTRACE_PENDING_DATA_SIZE_MAX",
                        "name": "APPTRACE_PENDING_DATA_SIZE_MAX",
                        "range": null,
                        "title": "Size of the pending data buffer",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "FREERTOS_UNICORE && !PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_CCOUNT",
                                                "name": "APPTRACE_SV_TS_SOURCE_CCOUNT",
                                                "range": null,
                                                "title": "CPU cycle counter (CCOUNT)",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_00",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_00",
                                                "range": null,
                                                "title": "Timer 0, Group 0",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_01",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_01",
                                                "range": null,
                                                "title": "Timer 1, Group 0",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_10",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_10",
                                                "range": null,
                                                "title": "Timer 0, Group 1",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!PM_ENABLE && !IDF_TARGET_ESP32C3 && <choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_TIMER_11",
                                                "name": "APPTRACE_SV_TS_SOURCE_TIMER_11",
                                                "range": null,
                                                "title": "Timer 1, Group 1",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice APPTRACE_SV_TS_SOURCE>",
                                                "help": null,
                                                "id": "APPTRACE_SV_TS_SOURCE_ESP_TIMER",
                                                "name": "APPTRACE_SV_TS_SOURCE_ESP_TIMER",
                                                "range": null,
                                                "title": "esp_timer high resolution timer",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "SystemView needs to use a hardware timer as the source of timestamps\nwhen tracing. This option selects the timer for it.",
                                        "id": "component-config-application-level-tracing-freertos-systemview-tracing-systemview-tracing-enable-timer-to-use-as-timestamp-source",
                                        "name": "APPTRACE_SV_TS_SOURCE",
                                        "title": "Timer to use as timestamp source",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Configures maximum supported tasks in sysview debug",
                                        "id": "APPTRACE_SV_MAX_TASKS",
                                        "name": "APPTRACE_SV_MAX_TASKS",
                                        "range": null,
                                        "title": "Maximum supported tasks",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Configures timeout (in us) to wait for free space in trace buffer.\nSet to -1 to wait forever and avoid lost events.",
                                        "id": "APPTRACE_SV_BUF_WAIT_TMO",
                                        "name": "APPTRACE_SV_BUF_WAIT_TMO",
                                        "range": null,
                                        "title": "Trace buffer wait timeout",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Trace Buffer Overflow\" event.",
                                        "id": "APPTRACE_SV_EVT_OVERFLOW_ENABLE",
                                        "name": "APPTRACE_SV_EVT_OVERFLOW_ENABLE",
                                        "range": null,
                                        "title": "Trace Buffer Overflow Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"ISR Enter\" event.",
                                        "id": "APPTRACE_SV_EVT_ISR_ENTER_ENABLE",
                                        "name": "APPTRACE_SV_EVT_ISR_ENTER_ENABLE",
                                        "range": null,
                                        "title": "ISR Enter Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"ISR Exit\" event.",
                                        "id": "APPTRACE_SV_EVT_ISR_EXIT_ENABLE",
                                        "name": "APPTRACE_SV_EVT_ISR_EXIT_ENABLE",
                                        "range": null,
                                        "title": "ISR Exit Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"ISR to Scheduler\" event.",
                                        "id": "APPTRACE_SV_EVT_ISR_TO_SCHED_ENABLE",
                                        "name": "APPTRACE_SV_EVT_ISR_TO_SCHED_ENABLE",
                                        "range": null,
                                        "title": "ISR Exit to Scheduler Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Start Execution\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_START_EXEC_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_START_EXEC_ENABLE",
                                        "range": null,
                                        "title": "Task Start Execution Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Stop Execution\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_STOP_EXEC_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_STOP_EXEC_ENABLE",
                                        "range": null,
                                        "title": "Task Stop Execution Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Start Ready State\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_START_READY_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_START_READY_ENABLE",
                                        "range": null,
                                        "title": "Task Start Ready State Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Stop Ready State\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_STOP_READY_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_STOP_READY_ENABLE",
                                        "range": null,
                                        "title": "Task Stop Ready State Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Create\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_CREATE_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_CREATE_ENABLE",
                                        "range": null,
                                        "title": "Task Create Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Task Terminate\" event.",
                                        "id": "APPTRACE_SV_EVT_TASK_TERMINATE_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TASK_TERMINATE_ENABLE",
                                        "range": null,
                                        "title": "Task Terminate Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"System Idle\" event.",
                                        "id": "APPTRACE_SV_EVT_IDLE_ENABLE",
                                        "name": "APPTRACE_SV_EVT_IDLE_ENABLE",
                                        "range": null,
                                        "title": "System Idle Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Timer Enter\" event.",
                                        "id": "APPTRACE_SV_EVT_TIMER_ENTER_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TIMER_ENTER_ENABLE",
                                        "range": null,
                                        "title": "Timer Enter Event",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "APPTRACE_SV_ENABLE && APPTRACE_ENABLE",
                                        "help": "Enables \"Timer Exit\" event.",
                                        "id": "APPTRACE_SV_EVT_TIMER_EXIT_ENABLE",
                                        "name": "APPTRACE_SV_EVT_TIMER_EXIT_ENABLE",
                                        "range": null,
                                        "title": "Timer Exit Event",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "APPTRACE_ENABLE && APPTRACE_ENABLE",
                                "help": "Enables supporrt for SEGGER SystemView tracing functionality.",
                                "id": "APPTRACE_SV_ENABLE",
                                "name": "APPTRACE_SV_ENABLE",
                                "range": null,
                                "title": "SystemView Tracing Enable",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "APPTRACE_ENABLE",
                        "id": "component-config-application-level-tracing-freertos-systemview-tracing",
                        "title": "FreeRTOS SystemView Tracing",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "APPTRACE_ENABLE && !APPTRACE_SV_ENABLE",
                        "help": "Enables support for GCOV data transfer to host.",
                        "id": "APPTRACE_GCOV_ENABLE",
                        "name": "APPTRACE_GCOV_ENABLE",
                        "range": null,
                        "title": "GCOV to Host Enable",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-application-level-tracing",
                "title": "Application Level Tracing",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice ASIO_SSL_LIBRARY_CHOICE>",
                                        "help": null,
                                        "id": "ASIO_USE_ESP_OPENSSL",
                                        "name": "ASIO_USE_ESP_OPENSSL",
                                        "range": null,
                                        "title": "esp-openssl",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "TLS_STACK_WOLFSSL && <choice ASIO_SSL_LIBRARY_CHOICE>",
                                        "help": null,
                                        "id": "ASIO_USE_ESP_WOLFSSL",
                                        "name": "ASIO_USE_ESP_WOLFSSL",
                                        "range": null,
                                        "title": "wolfSSL (License info in wolfSSL directory README)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "ASIO_SSL_SUPPORT",
                                "help": "The ASIO support multiple backend TLS libraries. Currently the mbedTLS with a thin ESP-OpenSSL\nport layer (default choice) and WolfSSL are supported.\nDifferent TLS libraries may support different features and have different resource\nusage. Consult the ESP-TLS documentation in ESP-IDF Programming guide for more details.",
                                "id": "component-config-esp-asio-enable-ssl-tls-support-of-asio-choose-ssl-tls-library-for-esp-tls-see-help-for-more-info-",
                                "name": "ASIO_SSL_LIBRARY_CHOICE",
                                "title": "Choose SSL/TLS library for ESP-TLS (See help for more Info)",
                                "type": "choice"
                            }
                        ],
                        "depends_on": null,
                        "help": "Enable support for basic SSL/TLS features, available for mbedTLS/OpenSSL\nas well as wolfSSL TLS library.",
                        "id": "ASIO_SSL_SUPPORT",
                        "name": "ASIO_SSL_SUPPORT",
                        "range": null,
                        "title": "Enable SSL/TLS support of ASIO",
                        "type": "bool"
                    }
                ],
                "depends_on": null,
                "id": "component-config-esp-asio",
                "title": "ESP-ASIO",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BT_ENABLED && (IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3)",
                                "help": null,
                                "id": "BT_SOC_SUPPORT_5_0",
                                "name": "BT_SOC_SUPPORT_5_0",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_MODE>",
                                                "help": null,
                                                "id": "BTDM_CTRL_MODE_BLE_ONLY",
                                                "name": "BTDM_CTRL_MODE_BLE_ONLY",
                                                "range": null,
                                                "title": "BLE Only",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_MODE>",
                                                "help": null,
                                                "id": "BTDM_CTRL_MODE_BR_EDR_ONLY",
                                                "name": "BTDM_CTRL_MODE_BR_EDR_ONLY",
                                                "range": null,
                                                "title": "BR/EDR Only",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_MODE>",
                                                "help": null,
                                                "id": "BTDM_CTRL_MODE_BTDM",
                                                "name": "BTDM_CTRL_MODE_BTDM",
                                                "range": null,
                                                "title": "Bluetooth Dual Mode",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_ENABLED",
                                        "help": "Specify the bluetooth controller mode (BR/EDR, BLE or dual mode).",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-bluetooth-controller-mode-br-edr-ble-dualmode-",
                                        "name": "BTDM_CTRL_MODE",
                                        "title": "Bluetooth controller mode (BR/EDR/BLE/DUALMODE)",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(BTDM_CTRL_MODE_BLE_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "BLE maximum connections of bluetooth controller.\nEach connection uses 1KB static DRAM whenever the BT controller is enabled.",
                                        "id": "BTDM_CTRL_BLE_MAX_CONN",
                                        "name": "BTDM_CTRL_BLE_MAX_CONN",
                                        "range": null,
                                        "title": "BLE Max Connections",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "BR/EDR ACL maximum connections of bluetooth controller.\nEach connection uses 1.2 KB DRAM whenever the BT controller is enabled.",
                                        "id": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN",
                                        "name": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN",
                                        "range": null,
                                        "title": "BR/EDR ACL Max Connections",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "BR/EDR Synchronize maximum connections of bluetooth controller.\nEach connection uses 2 KB DRAM whenever the BT controller is enabled.",
                                        "id": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN",
                                        "name": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN",
                                        "range": null,
                                        "title": "BR/EDR Sync(SCO/eSCO) Max Connections",
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_BR_EDR_SCO_DATA_PATH>",
                                                "help": null,
                                                "id": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_HCI",
                                                "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_HCI",
                                                "range": null,
                                                "title": "HCI",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_BR_EDR_SCO_DATA_PATH>",
                                                "help": null,
                                                "id": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_PCM",
                                                "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_PCM",
                                                "range": null,
                                                "title": "PCM",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "(BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "SCO data path, i.e. HCI or PCM.\nSCO data can be sent/received through HCI synchronous packets, or the data\ncan be routed to on-chip PCM module on ESP32. PCM input/output signals can\nbe \"matrixed\" to GPIOs. The default data path can also be set using API\n\"esp_bredr_sco_datapath_set\"",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-br-edr-sync-sco-esco-default-data-path",
                                        "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH",
                                        "title": "BR/EDR Sync(SCO/eSCO) default data path",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_EFF",
                                        "name": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_CTRL_PCM_ROLE>",
                                                        "help": null,
                                                        "id": "BTDM_CTRL_PCM_ROLE_MASTER",
                                                        "name": "BTDM_CTRL_PCM_ROLE_MASTER",
                                                        "range": null,
                                                        "title": "PCM Master",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_CTRL_PCM_ROLE>",
                                                        "help": null,
                                                        "id": "BTDM_CTRL_PCM_ROLE_SLAVE",
                                                        "name": "BTDM_CTRL_PCM_ROLE_SLAVE",
                                                        "range": null,
                                                        "title": "PCM Slave",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BTDM_CTRL_PCM_ROLE_EDGE_CONFIG && BT_ENABLED",
                                                "help": "PCM role can be configured as PCM master or PCM slave",
                                                "id": "component-config-bluetooth-bluetooth-bluetooth-controller-pcm-signal-config-role-and-polar--pcm-role",
                                                "name": "BTDM_CTRL_PCM_ROLE",
                                                "title": "PCM Role",
                                                "type": "choice"
                                            },
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_CTRL_PCM_POLAR>",
                                                        "help": null,
                                                        "id": "BTDM_CTRL_PCM_POLAR_FALLING_EDGE",
                                                        "name": "BTDM_CTRL_PCM_POLAR_FALLING_EDGE",
                                                        "range": null,
                                                        "title": "Falling Edge",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_CTRL_PCM_POLAR>",
                                                        "help": null,
                                                        "id": "BTDM_CTRL_PCM_POLAR_RISING_EDGE",
                                                        "name": "BTDM_CTRL_PCM_POLAR_RISING_EDGE",
                                                        "range": null,
                                                        "title": "Rising Edge",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BTDM_CTRL_PCM_ROLE_EDGE_CONFIG && BT_ENABLED",
                                                "help": "PCM polarity can be configured as Falling Edge or Rising Edge",
                                                "id": "component-config-bluetooth-bluetooth-bluetooth-controller-pcm-signal-config-role-and-polar--pcm-polar",
                                                "name": "BTDM_CTRL_PCM_POLAR",
                                                "title": "PCM Polar",
                                                "type": "choice"
                                            }
                                        ],
                                        "depends_on": "BTDM_CTRL_BR_EDR_SCO_DATA_PATH_PCM && BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_PCM_ROLE_EDGE_CONFIG",
                                        "is_menuconfig": true,
                                        "name": "BTDM_CTRL_PCM_ROLE_EDGE_CONFIG",
                                        "range": null,
                                        "title": "PCM Signal Config (Role and Polar)",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_PCM_ROLE_EFF",
                                        "name": "BTDM_CTRL_PCM_ROLE_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_PCM_POLAR_EFF",
                                        "name": "BTDM_CTRL_PCM_POLAR_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BTDM_CTRL_MODE_BTDM && BT_ENABLED",
                                        "help": "BLE auto latency, used to enhance classic BT performance\nwhile classic BT and BLE are enabled at the same time.",
                                        "id": "BTDM_CTRL_AUTO_LATENCY",
                                        "name": "BTDM_CTRL_AUTO_LATENCY",
                                        "range": null,
                                        "title": "Auto latency",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_AUTO_LATENCY_EFF",
                                        "name": "BTDM_CTRL_AUTO_LATENCY_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(BTDM_CTRL_MODE_BR_EDR_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "To protect from BIAS attack during Legacy authentication,\nLegacy authentication Vendor specific event should be enabled",
                                        "id": "BTDM_CTRL_LEGACY_AUTH_VENDOR_EVT",
                                        "name": "BTDM_CTRL_LEGACY_AUTH_VENDOR_EVT",
                                        "range": null,
                                        "title": "Legacy Authentication Vendor Specific Event Enable",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_LEGACY_AUTH_VENDOR_EVT_EFF",
                                        "name": "BTDM_CTRL_LEGACY_AUTH_VENDOR_EVT_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_BLE_MAX_CONN_EFF",
                                        "name": "BTDM_CTRL_BLE_MAX_CONN_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN_EFF",
                                        "name": "BTDM_CTRL_BR_EDR_MAX_ACL_CONN_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN_EFF",
                                        "name": "BTDM_CTRL_BR_EDR_MAX_SYNC_CONN_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_PINNED_TO_CORE_CHOICE>",
                                                "help": null,
                                                "id": "BTDM_CTRL_PINNED_TO_CORE_0",
                                                "name": "BTDM_CTRL_PINNED_TO_CORE_0",
                                                "range": null,
                                                "title": "Core 0 (PRO CPU)",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "!FREERTOS_UNICORE && <choice BTDM_CTRL_PINNED_TO_CORE_CHOICE>",
                                                "help": null,
                                                "id": "BTDM_CTRL_PINNED_TO_CORE_1",
                                                "name": "BTDM_CTRL_PINNED_TO_CORE_1",
                                                "range": null,
                                                "title": "Core 1 (APP CPU)",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "!FREERTOS_UNICORE && BT_ENABLED",
                                        "help": "Specify the cpu core to run bluetooth controller.\nCan not specify no-affinity.",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-the-cpu-core-which-bluetooth-controller-run",
                                        "name": "BTDM_CTRL_PINNED_TO_CORE_CHOICE",
                                        "title": "The cpu core which bluetooth controller run",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_CTRL_PINNED_TO_CORE",
                                        "name": "BTDM_CTRL_PINNED_TO_CORE",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_HCI_MODE_CHOICE>",
                                                "help": "Normal option. Mostly, choose this VHCI when bluetooth host run on ESP32, too.",
                                                "id": "BTDM_CTRL_HCI_MODE_VHCI",
                                                "name": "BTDM_CTRL_HCI_MODE_VHCI",
                                                "range": null,
                                                "title": "VHCI",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_CTRL_HCI_MODE_CHOICE>",
                                                "help": "If use external bluetooth host which run on other hardware and use UART as the HCI interface,\nchoose this option.",
                                                "id": "BTDM_CTRL_HCI_MODE_UART_H4",
                                                "name": "BTDM_CTRL_HCI_MODE_UART_H4",
                                                "range": null,
                                                "title": "UART(H4)",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_ENABLED",
                                        "help": "Speicify HCI mode as VHCI or UART(H4)",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-hci-mode",
                                        "name": "BTDM_CTRL_HCI_MODE_CHOICE",
                                        "title": "HCI mode",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_CTRL_HCI_MODE_UART_H4 && BT_ENABLED",
                                                "help": "Uart number for HCI. The available uart is UART1 and UART2.",
                                                "id": "BTDM_CTRL_HCI_UART_NO",
                                                "name": "BTDM_CTRL_HCI_UART_NO",
                                                "range": null,
                                                "title": "UART Number for HCI",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_CTRL_HCI_MODE_UART_H4 && BT_ENABLED",
                                                "help": "UART Baudrate for HCI. Please use standard baudrate.",
                                                "id": "BTDM_CTRL_HCI_UART_BAUDRATE",
                                                "name": "BTDM_CTRL_HCI_UART_BAUDRATE",
                                                "range": null,
                                                "title": "UART Baudrate for HCI",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "BT_ENABLED",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-hci-uart-h4-options",
                                        "title": "HCI UART(H4) Options",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [
                                                            {
                                                                "children": [],
                                                                "depends_on": "<choice BTDM_CTRL_MODEM_SLEEP_MODE>",
                                                                "help": "ORIG mode is a bluetooth sleep mode that can be used for dual mode controller. In this mode,\nbluetooth controller sleeps between BR/EDR frames and BLE events. A low power clock is used to\nmaintain bluetooth reference clock.",
                                                                "id": "BTDM_CTRL_MODEM_SLEEP_MODE_ORIG",
                                                                "name": "BTDM_CTRL_MODEM_SLEEP_MODE_ORIG",
                                                                "range": null,
                                                                "title": "ORIG Mode(sleep with low power clock)",
                                                                "type": "bool"
                                                            },
                                                            {
                                                                "children": [],
                                                                "depends_on": "<choice BTDM_CTRL_MODEM_SLEEP_MODE>",
                                                                "help": "EVED mode is for BLE only and is only for internal test. Do not use it for production. this\nmode is not compatible with DFS nor light sleep",
                                                                "id": "BTDM_CTRL_MODEM_SLEEP_MODE_EVED",
                                                                "name": "BTDM_CTRL_MODEM_SLEEP_MODE_EVED",
                                                                "range": null,
                                                                "title": "EVED Mode(For internal test only)",
                                                                "type": "bool"
                                                            }
                                                        ],
                                                        "depends_on": "BTDM_CTRL_MODEM_SLEEP && BT_ENABLED",
                                                        "help": "To select which strategy to use for modem sleep",
                                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-modem-sleep-options-bluetooth-modem-sleep-bluetooth-modem-sleep-mode",
                                                        "name": "BTDM_CTRL_MODEM_SLEEP_MODE",
                                                        "title": "Bluetooth Modem sleep mode",
                                                        "type": "choice"
                                                    }
                                                ],
                                                "depends_on": "BT_ENABLED",
                                                "help": "Enable/disable bluetooth controller low power mode.",
                                                "id": "BTDM_CTRL_MODEM_SLEEP",
                                                "name": "BTDM_CTRL_MODEM_SLEEP",
                                                "range": null,
                                                "title": "Bluetooth modem sleep",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_CTRL_LOW_POWER_CLOCK>",
                                                        "help": "Main crystal can be used as low power clock for bluetooth modem sleep. If this option is\nselected, bluetooth modem sleep can work under Dynamic Frequency Scaling(DFS) enabled, but\ncannot work when light sleep is enabled. Main crystal has a good performance in accuracy as\nthe bluetooth low power clock source.",
                                                        "id": "BTDM_CTRL_LPCLK_SEL_MAIN_XTAL",
                                                        "name": "BTDM_CTRL_LPCLK_SEL_MAIN_XTAL",
                                                        "range": null,
                                                        "title": "Main crystal",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "ESP32_RTC_CLK_SRC_EXT_CRYS && <choice BTDM_CTRL_LOW_POWER_CLOCK>",
                                                        "help": "External 32kHz crystal has a nominal frequency of 32.768kHz and provides good frequency\nstability. If used as Bluetooth low power clock, External 32kHz can support Bluetooth\nmodem sleep to be used with both DFS and light sleep.",
                                                        "id": "BTDM_CTRL_LPCLK_SEL_EXT_32K_XTAL",
                                                        "name": "BTDM_CTRL_LPCLK_SEL_EXT_32K_XTAL",
                                                        "range": null,
                                                        "title": "External 32kHz crystal",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BTDM_CTRL_MODEM_SLEEP_MODE_ORIG && BT_ENABLED",
                                                "help": "Select the low power clock source for bluetooth controller. Bluetooth low power clock is\nthe clock source to maintain time in sleep mode.\n\n- \"Main crystal\" option provides good accuracy and can support Dynamic Frequency Scaling\n  to be used with Bluetooth modem sleep. Light sleep is not supported.\n- \"External 32kHz crystal\" option allows user to use a 32.768kHz crystal as Bluetooth low\n  power clock. This option is allowed as long as External 32kHz crystal is configured as\n  the system RTC clock source. This option provides good accuracy and supports Bluetooth\n  modem sleep to be used alongside Dynamic Frequency Scaling or light sleep.",
                                                "id": "component-config-bluetooth-bluetooth-bluetooth-controller-modem-sleep-options-bluetooth-low-power-clock",
                                                "name": "BTDM_CTRL_LOW_POWER_CLOCK",
                                                "title": "Bluetooth low power clock",
                                                "type": "choice"
                                            }
                                        ],
                                        "depends_on": "BT_ENABLED",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-modem-sleep-options",
                                        "title": "MODEM SLEEP Options",
                                        "type": "menu"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_CTRL_LPCLK_SEL_EXT_32K_XTAL && BTDM_CTRL_MODE_BLE_ONLY && <choice BTDM_BLE_SLEEP_CLOCK_ACCURACY>",
                                                "help": null,
                                                "id": "BTDM_BLE_DEFAULT_SCA_500PPM",
                                                "name": "BTDM_BLE_DEFAULT_SCA_500PPM",
                                                "range": null,
                                                "title": "251ppm to 500ppm",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BTDM_BLE_SLEEP_CLOCK_ACCURACY>",
                                                "help": null,
                                                "id": "BTDM_BLE_DEFAULT_SCA_250PPM",
                                                "name": "BTDM_BLE_DEFAULT_SCA_250PPM",
                                                "range": null,
                                                "title": "151ppm to 250ppm",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "(BTDM_CTRL_MODE_BLE_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "BLE Sleep Clock Accuracy(SCA) for the local device is used to estimate window widening in BLE\nconnection events. With a lower level of clock accuracy(e.g. 500ppm over 250ppm), the slave\nneeds a larger RX window to synchronize with master in each anchor point, thus resulting in an\nincrease of power consumption but a higher level of robustness in keeping connected. According\nto the requirements of Bluetooth Core specification 4.2, the worst-case accuracy of Classic\nBluetooth low power oscialltor(LPO) is +/-250ppm in STANDBY and in low power modes such as\nsniff. For BLE the worst-case SCA is +/-500ppm.\n\n- \"151ppm to 250ppm\" option is the default value for Bluetooth Dual mode\n- \"251ppm to 500ppm\" option can be used in BLE only mode when using external 32kHz crystal as\n   low power clock. This option is provided in case that BLE sleep clock has a lower level of\n   accuracy, or other error sources contribute to the inaccurate timing during sleep.",
                                        "id": "component-config-bluetooth-bluetooth-bluetooth-controller-ble-sleep-clock-accuracy",
                                        "name": "BTDM_BLE_SLEEP_CLOCK_ACCURACY",
                                        "title": "BLE Sleep Clock Accuracy",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_BLE_SLEEP_CLOCK_ACCURACY_INDEX_EFF",
                                        "name": "BTDM_BLE_SLEEP_CLOCK_ACCURACY_INDEX_EFF",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_SCAN_DUPL_TYPE>",
                                                        "help": "This way is to use advertiser address filtering. The adv packet of the same address is only\nallowed to be reported once",
                                                        "id": "BTDM_SCAN_DUPL_TYPE_DEVICE",
                                                        "name": "BTDM_SCAN_DUPL_TYPE_DEVICE",
                                                        "range": null,
                                                        "title": "Scan Duplicate By Device Address",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_SCAN_DUPL_TYPE>",
                                                        "help": "This way is to use advertising data filtering. All same advertising data only allow to be reported\nonce even though they are from different devices.",
                                                        "id": "BTDM_SCAN_DUPL_TYPE_DATA",
                                                        "name": "BTDM_SCAN_DUPL_TYPE_DATA",
                                                        "range": null,
                                                        "title": "Scan Duplicate By Advertising Data",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BTDM_SCAN_DUPL_TYPE>",
                                                        "help": "This way is to use advertising data and device address filtering. All different adv packets with\nthe same address are allowed to be reported.",
                                                        "id": "BTDM_SCAN_DUPL_TYPE_DATA_DEVICE",
                                                        "name": "BTDM_SCAN_DUPL_TYPE_DATA_DEVICE",
                                                        "range": null,
                                                        "title": "Scan Duplicate By Device Address And Advertising Data",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BTDM_BLE_SCAN_DUPL && BT_ENABLED",
                                                "help": "Scan duplicate have three ways. one is \"Scan Duplicate By Device Address\", This way is to use\nadvertiser address filtering. The adv packet of the same address is only allowed to be reported once.\nAnother way is \"Scan Duplicate By Device Address And Advertising Data\". This way is to use advertising\ndata and device address filtering. All different adv packets with the same address are allowed to be\nreported. The last way is \"Scan Duplicate By Advertising Data\". This way is to use advertising data\nfiltering. All same advertising data only allow to be reported once even though they are from\ndifferent devices.",
                                                "id": "component-config-bluetooth-bluetooth-bluetooth-controller-ble-scan-duplicate-options-scan-duplicate-type",
                                                "name": "BTDM_SCAN_DUPL_TYPE",
                                                "title": "Scan Duplicate Type",
                                                "type": "choice"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_BLE_SCAN_DUPL && BT_ENABLED",
                                                "help": null,
                                                "id": "BTDM_SCAN_DUPL_TYPE",
                                                "name": "BTDM_SCAN_DUPL_TYPE",
                                                "range": null,
                                                "title": null,
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_BLE_SCAN_DUPL && BT_ENABLED",
                                                "help": "Maximum number of devices which can be recorded in scan duplicate filter.\nWhen the maximum amount of device in the filter is reached, the cache will be refreshed.",
                                                "id": "BTDM_SCAN_DUPL_CACHE_SIZE",
                                                "name": "BTDM_SCAN_DUPL_CACHE_SIZE",
                                                "range": null,
                                                "title": "Maximum number of devices in scan duplicate filter",
                                                "type": "int"
                                            },
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "BTDM_BLE_MESH_SCAN_DUPL_EN && BT_ENABLED",
                                                        "help": "Maximum number of adv packets which can be recorded in duplicate scan cache for BLE Mesh.\nWhen the maximum amount of device in the filter is reached, the cache will be refreshed.",
                                                        "id": "BTDM_MESH_DUPL_SCAN_CACHE_SIZE",
                                                        "name": "BTDM_MESH_DUPL_SCAN_CACHE_SIZE",
                                                        "range": null,
                                                        "title": "Maximum number of Mesh adv packets in scan duplicate filter",
                                                        "type": "int"
                                                    }
                                                ],
                                                "depends_on": "BTDM_BLE_SCAN_DUPL && BT_ENABLED",
                                                "help": "This enables the BLE scan duplicate for special BLE Mesh scan.",
                                                "id": "BTDM_BLE_MESH_SCAN_DUPL_EN",
                                                "name": "BTDM_BLE_MESH_SCAN_DUPL_EN",
                                                "range": null,
                                                "title": "Special duplicate scan mechanism for BLE Mesh scan",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "(BTDM_CTRL_MODE_BTDM || BTDM_CTRL_MODE_BLE_ONLY) && BT_ENABLED",
                                        "help": "This select enables parameters setting of BLE scan duplicate.",
                                        "id": "BTDM_BLE_SCAN_DUPL",
                                        "name": "BTDM_BLE_SCAN_DUPL",
                                        "range": null,
                                        "title": "BLE Scan Duplicate Options",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(BTDM_CTRL_MODE_BLE_ONLY || BTDM_CTRL_MODE_BTDM) && BT_ENABLED",
                                        "help": "The full scan function is mainly used to provide BLE scan performance.\nThis is required for scenes with high scan performance requirements, such as BLE Mesh scenes.",
                                        "id": "BTDM_CTRL_FULL_SCAN_SUPPORTED",
                                        "name": "BTDM_CTRL_FULL_SCAN_SUPPORTED",
                                        "range": null,
                                        "title": "BLE full scan feature supported",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP && BT_ENABLED",
                                                "help": "The number of unprocessed advertising report that Bluedroid can save.If you set\n`BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM` to a small value, this may cause adv packets lost.\nIf you set `BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM` to a large value, Bluedroid may cache a\nlot of adv packets and this may cause system memory run out. For example, if you set\nit to 50, the maximum memory consumed by host is 35 * 50 bytes. Please set\n`BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM` according to your system free memory and handle adv\npackets as fast as possible, otherwise it will cause adv packets lost.",
                                                "id": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM",
                                                "name": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_NUM",
                                                "range": null,
                                                "title": "BLE adv report flow control number",
                                                "type": "int"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP && BT_ENABLED",
                                                "help": "When adv report flow control is enabled, The ADV lost event will be generated when the number\nof ADV packets lost in the controller reaches this threshold. It is better to set a larger value.\nIf you set `BTDM_BLE_ADV_REPORT_DISCARD_THRSHOLD` to a small value or printf every adv lost event, it\nmay cause adv packets lost more.",
                                                "id": "BTDM_BLE_ADV_REPORT_DISCARD_THRSHOLD",
                                                "name": "BTDM_BLE_ADV_REPORT_DISCARD_THRSHOLD",
                                                "range": null,
                                                "title": "BLE adv lost event threshold value",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "(BTDM_CTRL_MODE_BTDM || BTDM_CTRL_MODE_BLE_ONLY) && BT_ENABLED",
                                        "help": "The function is mainly used to enable flow control for advertising reports. When it is enabled,\nadvertising reports will be discarded by the controller if the number of unprocessed advertising\nreports exceeds the size of BLE adv report flow control.",
                                        "id": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP",
                                        "name": "BTDM_BLE_ADV_REPORT_FLOW_CTRL_SUPP",
                                        "range": null,
                                        "title": "BLE adv report flow control supported",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED",
                                        "help": null,
                                        "id": "BTDM_RESERVE_DRAM",
                                        "name": "BTDM_RESERVE_DRAM",
                                        "range": null,
                                        "title": null,
                                        "type": "hex"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_ENABLED && BT_ENABLED",
                                        "help": "Using Level 4 interrupt for Bluetooth.",
                                        "id": "BTDM_CTRL_HLI",
                                        "name": "BTDM_CTRL_HLI",
                                        "range": null,
                                        "title": "High level interrupt",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_ENABLED",
                                "id": "component-config-bluetooth-bluetooth-bluetooth-controller",
                                "title": "Bluetooth controller",
                                "type": "menu"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_HOST>",
                                        "help": "This option is recommended for classic Bluetooth or for dual-mode\nusecases",
                                        "id": "BT_BLUEDROID_ENABLED",
                                        "name": "BT_BLUEDROID_ENABLED",
                                        "range": null,
                                        "title": "Bluedroid - Dual-mode",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_HOST>",
                                        "help": "This option is recommended for BLE only usecases to save on memory",
                                        "id": "BT_NIMBLE_ENABLED",
                                        "name": "BT_NIMBLE_ENABLED",
                                        "range": null,
                                        "title": "NimBLE - BLE only",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_HOST>",
                                        "help": "This option is recommended when you want to communicate directly with the\ncontroller (without any host) or when you are using any other host stack\nnot supported by Espressif (not mentioned here).",
                                        "id": "BT_CONTROLLER_ONLY",
                                        "name": "BT_CONTROLLER_ONLY",
                                        "range": null,
                                        "title": "Controller Only",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_ENABLED && (BTDM_CTRL_HCI_MODE_VHCI || BT_CTRL_HCI_MODE_VHCI)",
                                "help": "This helps to choose Bluetooth host stack",
                                "id": "component-config-bluetooth-bluetooth-bluetooth-host",
                                "name": "BT_HOST",
                                "title": "Bluetooth Host",
                                "type": "choice"
                            }
                        ],
                        "depends_on": "IDF_TARGET_ESP32 || IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3",
                        "help": "Select this option to enable Bluetooth and show the submenu with Bluetooth configuration choices.",
                        "id": "BT_ENABLED",
                        "name": "BT_ENABLED",
                        "range": null,
                        "title": "Bluetooth",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This select btc task stack size",
                                "id": "BT_BTC_TASK_STACK_SIZE",
                                "name": "BT_BTC_TASK_STACK_SIZE",
                                "range": null,
                                "title": "Bluetooth event (callback to application) task stack size",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_BLUEDROID_PINNED_TO_CORE_CHOICE>",
                                        "help": null,
                                        "id": "BT_BLUEDROID_PINNED_TO_CORE_0",
                                        "name": "BT_BLUEDROID_PINNED_TO_CORE_0",
                                        "range": null,
                                        "title": "Core 0 (PRO CPU)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "!FREERTOS_UNICORE && <choice BT_BLUEDROID_PINNED_TO_CORE_CHOICE>",
                                        "help": null,
                                        "id": "BT_BLUEDROID_PINNED_TO_CORE_1",
                                        "name": "BT_BLUEDROID_PINNED_TO_CORE_1",
                                        "range": null,
                                        "title": "Core 1 (APP CPU)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_BLUEDROID_ENABLED && !FREERTOS_UNICORE && BT_BLUEDROID_ENABLED",
                                "help": "Which the cpu core to run Bluedroid. Can choose core0 and core1.\nCan not specify no-affinity.",
                                "id": "component-config-bluetooth-bluedroid-options-the-cpu-core-which-bluedroid-run",
                                "name": "BT_BLUEDROID_PINNED_TO_CORE_CHOICE",
                                "title": "The cpu core which Bluedroid run",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": null,
                                "id": "BT_BLUEDROID_PINNED_TO_CORE",
                                "name": "BT_BLUEDROID_PINNED_TO_CORE",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This select btu task stack size",
                                "id": "BT_BTU_TASK_STACK_SIZE",
                                "name": "BT_BTU_TASK_STACK_SIZE",
                                "range": null,
                                "title": "Bluetooth Bluedroid Host Stack task stack size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "Bluedroid memory debug",
                                "id": "BT_BLUEDROID_MEM_DEBUG",
                                "name": "BT_BLUEDROID_MEM_DEBUG",
                                "range": null,
                                "title": "Bluedroid memory debug",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BT_CLASSIC_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": "Advanced Audio Distrubution Profile",
                                        "id": "BT_A2DP_ENABLE",
                                        "name": "BT_A2DP_ENABLE",
                                        "range": null,
                                        "title": "A2DP",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_CLASSIC_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": "This enables the Serial Port Profile",
                                        "id": "BT_SPP_ENABLED",
                                        "name": "BT_SPP_ENABLED",
                                        "range": null,
                                        "title": "SPP",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BT_HFP_ROLE>",
                                                        "help": null,
                                                        "id": "BT_HFP_CLIENT_ENABLE",
                                                        "name": "BT_HFP_CLIENT_ENABLE",
                                                        "range": null,
                                                        "title": "Hands Free Unit",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BT_HFP_ROLE>",
                                                        "help": null,
                                                        "id": "BT_HFP_AG_ENABLE",
                                                        "name": "BT_HFP_AG_ENABLE",
                                                        "range": null,
                                                        "title": "Audio Gateway",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BT_HFP_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": null,
                                                "id": "component-config-bluetooth-bluedroid-options-classic-bluetooth-hands-free-handset-profile-hands-free-profile-role-configuration",
                                                "name": "BT_HFP_ROLE",
                                                "title": "Hands-free Profile Role configuration",
                                                "type": "choice"
                                            },
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BT_HFP_AUDIO_DATA_PATH>",
                                                        "help": null,
                                                        "id": "BT_HFP_AUDIO_DATA_PATH_PCM",
                                                        "name": "BT_HFP_AUDIO_DATA_PATH_PCM",
                                                        "range": null,
                                                        "title": "PCM",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BT_HFP_AUDIO_DATA_PATH>",
                                                        "help": null,
                                                        "id": "BT_HFP_AUDIO_DATA_PATH_HCI",
                                                        "name": "BT_HFP_AUDIO_DATA_PATH_HCI",
                                                        "range": null,
                                                        "title": "HCI",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BT_HFP_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "SCO data path, i.e. HCI or PCM. This option is set using API\n\"esp_bredr_sco_datapath_set\" in Bluetooth host. Default SCO data\npath can also be set in Bluetooth Controller.",
                                                "id": "component-config-bluetooth-bluedroid-options-classic-bluetooth-hands-free-handset-profile-audio-sco-data-path",
                                                "name": "BT_HFP_AUDIO_DATA_PATH",
                                                "title": "audio(SCO) data path",
                                                "type": "choice"
                                            }
                                        ],
                                        "depends_on": "BT_CLASSIC_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_HFP_ENABLE",
                                        "name": "BT_HFP_ENABLE",
                                        "range": null,
                                        "title": "Hands Free/Handset Profile",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_BLUEDROID_ENABLED && IDF_TARGET_ESP32 && BT_BLUEDROID_ENABLED",
                                "help": "For now this option needs \"SMP_ENABLE\" to be set to yes",
                                "id": "BT_CLASSIC_ENABLED",
                                "name": "BT_CLASSIC_ENABLED",
                                "range": null,
                                "title": "Classic Bluetooth",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_HFP_AUDIO_DATA_PATH_HCI && BT_BLUEDROID_ENABLED",
                                "help": "This enables Wide Band Speech. Should disable it when SCO data path is PCM.\nOtherwise there will be no data transmited via GPIOs.",
                                "id": "BT_HFP_WBS_ENABLE",
                                "name": "BT_HFP_WBS_ENABLE",
                                "range": null,
                                "title": "Wide Band Speech",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_HID_ROLE>",
                                                "help": "This enables the BT HID Host",
                                                "id": "BT_HID_HOST_ENABLED",
                                                "name": "BT_HID_HOST_ENABLED",
                                                "range": null,
                                                "title": "Classic BT HID Host",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_HID_ROLE>",
                                                "help": "This enables the BT HID Device",
                                                "id": "BT_HID_DEVICE_ENABLED",
                                                "name": "BT_HID_DEVICE_ENABLED",
                                                "range": null,
                                                "title": "Classic BT HID Device",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_HID_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "component-config-bluetooth-bluedroid-options-classic-bt-hid-profile-role-configuration",
                                        "name": "BT_HID_ROLE",
                                        "title": "Profile Role configuration",
                                        "type": "choice"
                                    }
                                ],
                                "depends_on": "BT_CLASSIC_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This enables the BT HID Host",
                                "id": "BT_HID_ENABLED",
                                "name": "BT_HID_ENABLED",
                                "range": null,
                                "title": "Classic BT HID",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_CLASSIC_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This enables the Secure Simple Pairing. If disable this option,\nBluedroid will only support Legacy Pairing",
                                "id": "BT_SSP_ENABLED",
                                "name": "BT_SSP_ENABLED",
                                "range": null,
                                "title": "Secure Simple Pairing",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BT_GATTS_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "This enables \"Peripheral Preferred Connection Parameters\" characteristic (UUID: 0x2A04) in GAP service that has\nconnection parameters like min/max connection interval, slave latency and supervision timeout multiplier",
                                                "id": "BT_GATTS_PPCP_CHAR_GAP",
                                                "name": "BT_GATTS_PPCP_CHAR_GAP",
                                                "range": null,
                                                "title": "Enable Peripheral Preferred Connection Parameters characteristic in GAP service",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BT_GATTS_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "This option can be close when the app does not require blufi function.",
                                                "id": "BT_BLE_BLUFI_ENABLE",
                                                "name": "BT_BLE_BLUFI_ENABLE",
                                                "range": null,
                                                "title": "Include blufi function",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BT_GATTS_ENABLE && BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                                "help": "Maximum GATT Server Profiles Count",
                                                "id": "BT_GATT_MAX_SR_PROFILES",
                                                "name": "BT_GATT_MAX_SR_PROFILES",
                                                "range": null,
                                                "title": "Max GATT Server Profiles",
                                                "type": "int"
                                            },
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BT_GATTS_SEND_SERVICE_CHANGE_MODE>",
                                                        "help": "Manually send service change indication through API esp_ble_gatts_send_service_change_indication()",
                                                        "id": "BT_GATTS_SEND_SERVICE_CHANGE_MANUAL",
                                                        "name": "BT_GATTS_SEND_SERVICE_CHANGE_MANUAL",
                                                        "range": null,
                                                        "title": "GATTS manually send service change indication",
                                                        "type": "bool"
                                                    },
                                                    {
                                                        "children": [],
                                                        "depends_on": "<choice BT_GATTS_SEND_SERVICE_CHANGE_MODE>",
                                                        "help": "Let Bluedroid handle the service change indication internally",
                                                        "id": "BT_GATTS_SEND_SERVICE_CHANGE_AUTO",
                                                        "name": "BT_GATTS_SEND_SERVICE_CHANGE_AUTO",
                                                        "range": null,
                                                        "title": "GATTS automatically send service change indication",
                                                        "type": "bool"
                                                    }
                                                ],
                                                "depends_on": "BT_GATTS_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "Service change indication mode for GATT Server.",
                                                "id": "component-config-bluetooth-bluedroid-options-bluetooth-low-energy-include-gatt-server-module-gatts--gatts-service-change-mode",
                                                "name": "BT_GATTS_SEND_SERVICE_CHANGE_MODE",
                                                "title": "GATTS Service Change Mode",
                                                "type": "choice"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BT_GATTS_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": null,
                                                "id": "BT_GATTS_SEND_SERVICE_CHANGE_MODE",
                                                "name": "BT_GATTS_SEND_SERVICE_CHANGE_MODE",
                                                "range": null,
                                                "title": null,
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "BT_BLE_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": "This option can be disabled when the app work only on gatt client mode",
                                        "id": "BT_GATTS_ENABLE",
                                        "name": "BT_GATTS_ENABLE",
                                        "range": null,
                                        "title": "Include GATT server module(GATTS)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BT_GATTC_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "This select can save gattc cache data to nvs flash",
                                                "id": "BT_GATTC_CACHE_NVS_FLASH",
                                                "name": "BT_GATTC_CACHE_NVS_FLASH",
                                                "range": null,
                                                "title": "Save gattc cache data to nvs flash",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BT_GATTC_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "The number of attempts to reconnect if the connection establishment failed",
                                                "id": "BT_GATTC_CONNECT_RETRY_COUNT",
                                                "name": "BT_GATTC_CONNECT_RETRY_COUNT",
                                                "range": null,
                                                "title": "The number of attempts to reconnect if the connection establishment failed",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "BT_BLE_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": "This option can be close when the app work only on gatt server mode",
                                        "id": "BT_GATTC_ENABLE",
                                        "name": "BT_GATTC_ENABLE",
                                        "range": null,
                                        "title": "Include GATT client module(GATTC)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BT_BLE_SMP_ENABLE && BT_BLUEDROID_ENABLED",
                                                "help": "In order to reduce the pairing time, slave actively initiates connection parameters\nupdate during pairing.",
                                                "id": "BT_SMP_SLAVE_CON_PARAMS_UPD_ENABLE",
                                                "name": "BT_SMP_SLAVE_CON_PARAMS_UPD_ENABLE",
                                                "range": null,
                                                "title": "Slave enable connection parameters update during pairing",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLE_ENABLED && BT_BLUEDROID_ENABLED",
                                        "help": "This option can be close when the app not used the ble security connect.",
                                        "id": "BT_BLE_SMP_ENABLE",
                                        "name": "BT_BLE_SMP_ENABLE",
                                        "range": null,
                                        "title": "Include BLE security module(SMP)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This enables Bluetooth Low Energy",
                                "id": "BT_BLE_ENABLED",
                                "name": "BT_BLE_ENABLED",
                                "range": null,
                                "title": "Bluetooth Low Energy",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This select can save the rodata code size",
                                "id": "BT_STACK_NO_LOG",
                                "name": "BT_STACK_NO_LOG",
                                "range": null,
                                "title": "Disable BT debug logs (minimize bin size)",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_API",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HCI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HCI_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_HCI_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for HCI layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-hci-layer",
                                        "name": "BT_LOG_HCI_TRACE_LEVEL",
                                        "title": "HCI layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_HCI_TRACE_LEVEL",
                                        "name": "BT_LOG_HCI_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_API",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTM_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_BTM_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for BTM layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-btm-layer",
                                        "name": "BT_LOG_BTM_TRACE_LEVEL",
                                        "title": "BTM layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_BTM_TRACE_LEVEL",
                                        "name": "BT_LOG_BTM_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_API",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_L2CAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_L2CAP_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_L2CAP_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for L2CAP layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-l2cap-layer",
                                        "name": "BT_LOG_L2CAP_TRACE_LEVEL",
                                        "title": "L2CAP layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_L2CAP_TRACE_LEVEL",
                                        "name": "BT_LOG_L2CAP_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_API",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_RFCOMM_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_RFCOMM_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_RFCOMM_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for RFCOMM layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-rfcomm-layer",
                                        "name": "BT_LOG_RFCOMM_TRACE_LEVEL",
                                        "title": "RFCOMM layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_RFCOMM_TRACE_LEVEL",
                                        "name": "BT_LOG_RFCOMM_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_API",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SDP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SDP_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_SDP_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for SDP layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-sdp-layer",
                                        "name": "BT_LOG_SDP_TRACE_LEVEL",
                                        "title": "SDP layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_SDP_TRACE_LEVEL",
                                        "name": "BT_LOG_SDP_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_API",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GAP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GAP_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_GAP_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for GAP layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-gap-layer",
                                        "name": "BT_LOG_GAP_TRACE_LEVEL",
                                        "title": "GAP layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_GAP_TRACE_LEVEL",
                                        "name": "BT_LOG_GAP_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_API",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BNEP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BNEP_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_BNEP_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for BNEP layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-bnep-layer",
                                        "name": "BT_LOG_BNEP_TRACE_LEVEL",
                                        "title": "BNEP layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_BNEP_TRACE_LEVEL",
                                        "name": "BT_LOG_BNEP_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_API",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_PAN_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_PAN_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_PAN_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for PAN layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-pan-layer",
                                        "name": "BT_LOG_PAN_TRACE_LEVEL",
                                        "title": "PAN layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_PAN_TRACE_LEVEL",
                                        "name": "BT_LOG_PAN_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_API",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_A2D_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_A2D_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_A2D_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for A2D layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-a2d-layer",
                                        "name": "BT_LOG_A2D_TRACE_LEVEL",
                                        "title": "A2D layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_A2D_TRACE_LEVEL",
                                        "name": "BT_LOG_A2D_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_API",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVDT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVDT_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_AVDT_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for AVDT layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-avdt-layer",
                                        "name": "BT_LOG_AVDT_TRACE_LEVEL",
                                        "title": "AVDT layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_AVDT_TRACE_LEVEL",
                                        "name": "BT_LOG_AVDT_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_API",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVCT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVCT_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_AVCT_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for AVCT layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-avct-layer",
                                        "name": "BT_LOG_AVCT_TRACE_LEVEL",
                                        "title": "AVCT layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_AVCT_TRACE_LEVEL",
                                        "name": "BT_LOG_AVCT_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_API",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_AVRC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_AVRC_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_AVRC_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for AVRC layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-avrc-layer",
                                        "name": "BT_LOG_AVRC_TRACE_LEVEL",
                                        "title": "AVRC layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_AVRC_TRACE_LEVEL",
                                        "name": "BT_LOG_AVRC_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_API",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_MCA_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_MCA_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_MCA_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for MCA layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-mca-layer",
                                        "name": "BT_LOG_MCA_TRACE_LEVEL",
                                        "title": "MCA layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_MCA_TRACE_LEVEL",
                                        "name": "BT_LOG_MCA_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_API",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_HID_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_HID_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_HID_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for HID layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-hid-layer",
                                        "name": "BT_LOG_HID_TRACE_LEVEL",
                                        "title": "HID layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_HID_TRACE_LEVEL",
                                        "name": "BT_LOG_HID_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_API",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_APPL_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_APPL_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_APPL_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for APPL layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-appl-layer",
                                        "name": "BT_LOG_APPL_TRACE_LEVEL",
                                        "title": "APPL layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_APPL_TRACE_LEVEL",
                                        "name": "BT_LOG_APPL_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_API",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_GATT_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_GATT_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_GATT_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for GATT layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-gatt-layer",
                                        "name": "BT_LOG_GATT_TRACE_LEVEL",
                                        "title": "GATT layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_GATT_TRACE_LEVEL",
                                        "name": "BT_LOG_GATT_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_API",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_SMP_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_SMP_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_SMP_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for SMP layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-smp-layer",
                                        "name": "BT_LOG_SMP_TRACE_LEVEL",
                                        "title": "SMP layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_SMP_TRACE_LEVEL",
                                        "name": "BT_LOG_SMP_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_API",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTIF_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTIF_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_BTIF_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for BTIF layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-btif-layer",
                                        "name": "BT_LOG_BTIF_TRACE_LEVEL",
                                        "title": "BTIF layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_BTIF_TRACE_LEVEL",
                                        "name": "BT_LOG_BTIF_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_API",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BTC_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BTC_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_BTC_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for BTC layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-btc-layer",
                                        "name": "BT_LOG_BTC_TRACE_LEVEL",
                                        "title": "BTC layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_BTC_TRACE_LEVEL",
                                        "name": "BT_LOG_BTC_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_API",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_OSI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_OSI_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_OSI_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for OSI layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-osi-layer",
                                        "name": "BT_LOG_OSI_TRACE_LEVEL",
                                        "title": "OSI layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_OSI_TRACE_LEVEL",
                                        "name": "BT_LOG_OSI_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_NONE",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_NONE",
                                                "range": null,
                                                "title": "NONE",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_ERROR",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_ERROR",
                                                "range": null,
                                                "title": "ERROR",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_WARNING",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_WARNING",
                                                "range": null,
                                                "title": "WARNING",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_API",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_API",
                                                "range": null,
                                                "title": "API",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_EVENT",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_EVENT",
                                                "range": null,
                                                "title": "EVENT",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_DEBUG",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_DEBUG",
                                                "range": null,
                                                "title": "DEBUG",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "<choice BT_LOG_BLUFI_TRACE_LEVEL>",
                                                "help": null,
                                                "id": "BT_LOG_BLUFI_TRACE_LEVEL_VERBOSE",
                                                "name": "BT_LOG_BLUFI_TRACE_LEVEL_VERBOSE",
                                                "range": null,
                                                "title": "VERBOSE",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": "Define BT trace level for BLUFI layer",
                                        "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level-blufi-layer",
                                        "name": "BT_LOG_BLUFI_TRACE_LEVEL",
                                        "title": "BLUFI layer",
                                        "type": "choice"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                        "help": null,
                                        "id": "BT_LOG_BLUFI_TRACE_LEVEL",
                                        "name": "BT_LOG_BLUFI_TRACE_LEVEL",
                                        "range": null,
                                        "title": null,
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BT_BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BT_BLUEDROID_ENABLED",
                                "id": "component-config-bluetooth-bluedroid-options-bt-debug-log-level",
                                "title": "BT DEBUG LOG LEVEL",
                                "type": "menu"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "Maximum BT/BLE connection count",
                                "id": "BT_ACL_CONNECTIONS",
                                "name": "BT_ACL_CONNECTIONS",
                                "range": null,
                                "title": "BT/BLE MAX ACL CONNECTIONS(1~7)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "Enable this option if there are multiple connections",
                                "id": "BT_MULTI_CONNECTION_ENBALE",
                                "name": "BT_MULTI_CONNECTION_ENBALE",
                                "range": null,
                                "title": "Enable BLE multi-conections",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This select can save the internal RAM if there have the PSRAM",
                                "id": "BT_ALLOCATION_FROM_SPIRAM_FIRST",
                                "name": "BT_ALLOCATION_FROM_SPIRAM_FIRST",
                                "range": null,
                                "title": "BT/BLE will first malloc the memory from the PSRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This select can make the allocation of memory will become more flexible",
                                "id": "BT_BLE_DYNAMIC_ENV_MEMORY",
                                "name": "BT_BLE_DYNAMIC_ENV_MEMORY",
                                "range": null,
                                "title": "Use dynamic memory allocation in BT/BLE stack",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "When scanning and scan duplicate is not enabled, if there are a lot of adv packets around\nor application layer handling adv packets is slow, it will cause the controller memory\nto run out. if enabled, adv packets will be lost when host queue is congested.",
                                "id": "BT_BLE_HOST_QUEUE_CONG_CHECK",
                                "name": "BT_BLE_HOST_QUEUE_CONG_CHECK",
                                "range": null,
                                "title": "BLE queue congestion check",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": null,
                                "id": "BT_SMP_ENABLE",
                                "name": "BT_SMP_ENABLE",
                                "range": null,
                                "title": null,
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && (BTDM_CTRL_MODE_BTDM || BTDM_CTRL_MODE_BLE_ONLY) && BT_BLUEDROID_ENABLED",
                                "help": "Originally, when doing BLE active scan, Bluedroid will not report adv to application layer\nuntil receive scan response. This option is used to disable the behavior. When enable this option,\nBluedroid will report adv data or scan response to application layer immediately.\n\n# Memory reserved at start of DRAM for Bluetooth stack",
                                "id": "BT_BLE_ACT_SCAN_REP_ADV_SCAN",
                                "name": "BT_BLE_ACT_SCAN_REP_ADV_SCAN",
                                "range": null,
                                "title": "Report adv data and scan response individually when BLE active scan",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "Bluetooth Connection establishment maximum time, if connection time exceeds this value, the connection\nestablishment fails, ESP_GATTC_OPEN_EVT or ESP_GATTS_OPEN_EVT is triggered.",
                                "id": "BT_BLE_ESTAB_LINK_CONN_TOUT",
                                "name": "BT_BLE_ESTAB_LINK_CONN_TOUT",
                                "range": null,
                                "title": "Timeout of BLE connection establishment",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && BT_BLUEDROID_ENABLED",
                                "help": "This enables controller RPA list function.\nFor ESP32, ESP32 only support network privacy mode. If this option is enabled, ESP32 will only accept\nadvertising packets from peer devices that contain private address, HW will not receive the advertising\npackets contain identity address after IRK changed. If this option is disabled, address resolution will\nbe performed in the host, so the functions that require controller to resolve address in the white list\ncannot be used. This option is disabled by default on ESP32, please enable or disable this option according\nto your own needs.\n\nFor ESP32C3 and esp32s3, devices support network privacy mode and device privacy mode, users can switch the\ntwo modes according to their own needs. So this option is enabled by default.",
                                "id": "BT_BLE_RPA_SUPPORTED",
                                "name": "BT_BLE_RPA_SUPPORTED",
                                "range": null,
                                "title": "Update RPA to Controller",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && (IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3) && BT_BLUEDROID_ENABLED",
                                "help": "This enables BLE 5.0 features, this option only support esp32c3/esp32s3 chip",
                                "id": "BT_BLE_50_FEATURES_SUPPORTED",
                                "name": "BT_BLE_50_FEATURES_SUPPORTED",
                                "range": null,
                                "title": "Enable BLE 5.0 features",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_BLUEDROID_ENABLED && (IDF_TARGET_ESP32C3 || IDF_TARGET_ESP32S3) && BT_BLUEDROID_ENABLED",
                                "help": "This enables BLE 4.2 features.",
                                "id": "BT_BLE_42_FEATURES_SUPPORTED",
                                "name": "BT_BLE_42_FEATURES_SUPPORTED",
                                "range": null,
                                "title": "Enable BLE 4.2 features",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BT_BLUEDROID_ENABLED",
                        "id": "component-config-bluetooth-bluedroid-options",
                        "title": "Bluedroid Options",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_MEM_ALLOC_MODE>",
                                        "help": null,
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_INTERNAL",
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_INTERNAL",
                                        "range": null,
                                        "title": "Internal memory",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && <choice BT_NIMBLE_MEM_ALLOC_MODE>",
                                        "help": null,
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL",
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL",
                                        "range": null,
                                        "title": "External SPIRAM",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_MEM_ALLOC_MODE>",
                                        "help": null,
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_DEFAULT",
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_DEFAULT",
                                        "range": null,
                                        "title": "Default alloc mode",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY && <choice BT_NIMBLE_MEM_ALLOC_MODE>",
                                        "help": "Allows to use IRAM memory region as 8bit accessible region.\n\nEvery unaligned (8bit or 16bit) access will result in an exception\nand incur penalty of certain clock cycles per unaligned read/write.",
                                        "id": "BT_NIMBLE_MEM_ALLOC_MODE_IRAM_8BIT",
                                        "name": "BT_NIMBLE_MEM_ALLOC_MODE_IRAM_8BIT",
                                        "range": null,
                                        "title": "Internal IRAM",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED",
                                "help": "Allocation strategy for NimBLE host stack, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n- Internal IRAM memory wherever applicable else internal DRAM",
                                "id": "component-config-bluetooth-nimble-options-memory-allocation-strategy",
                                "name": "BT_NIMBLE_MEM_ALLOC_MODE",
                                "title": "Memory allocation strategy",
                                "type": "choice"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_LOG_LEVEL>",
                                        "help": null,
                                        "id": "BT_NIMBLE_LOG_LEVEL_NONE",
                                        "name": "BT_NIMBLE_LOG_LEVEL_NONE",
                                        "range": null,
                                        "title": "No logs",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_LOG_LEVEL>",
                                        "help": null,
                                        "id": "BT_NIMBLE_LOG_LEVEL_ERROR",
                                        "name": "BT_NIMBLE_LOG_LEVEL_ERROR",
                                        "range": null,
                                        "title": "Error logs",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_LOG_LEVEL>",
                                        "help": null,
                                        "id": "BT_NIMBLE_LOG_LEVEL_WARNING",
                                        "name": "BT_NIMBLE_LOG_LEVEL_WARNING",
                                        "range": null,
                                        "title": "Warning logs",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_LOG_LEVEL>",
                                        "help": null,
                                        "id": "BT_NIMBLE_LOG_LEVEL_INFO",
                                        "name": "BT_NIMBLE_LOG_LEVEL_INFO",
                                        "range": null,
                                        "title": "Info logs",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_LOG_LEVEL>",
                                        "help": null,
                                        "id": "BT_NIMBLE_LOG_LEVEL_DEBUG",
                                        "name": "BT_NIMBLE_LOG_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "Debug logs",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Select NimBLE log level. Please make a note that the selected NimBLE log\nverbosity can not exceed the level set in \"Component config --> Log output\n--> Default log verbosity\".",
                                "id": "component-config-bluetooth-nimble-options-nimble-host-log-verbosity",
                                "name": "BT_NIMBLE_LOG_LEVEL",
                                "title": "NimBLE Host log verbosity",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED",
                                "help": null,
                                "id": "BT_NIMBLE_LOG_LEVEL",
                                "name": "BT_NIMBLE_LOG_LEVEL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Defines maximum number of concurrent BLE connections. For ESP32, user\nis expected to configure BTDM_CTRL_BLE_MAX_CONN from controller menu\nalong with this option. Similarly for ESP32-C3 or ESP32-S3, user is expected to\nconfigure BT_CTRL_BLE_MAX_ACT from controller menu.",
                                "id": "BT_NIMBLE_MAX_CONNECTIONS",
                                "name": "BT_NIMBLE_MAX_CONNECTIONS",
                                "range": null,
                                "title": "Maximum number of concurrent connections",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Defines maximum number of bonds to save for peer security and our security",
                                "id": "BT_NIMBLE_MAX_BONDS",
                                "name": "BT_NIMBLE_MAX_BONDS",
                                "range": null,
                                "title": "Maximum number of bonds to save across reboots",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Defines maximum number of CCC descriptors to save",
                                "id": "BT_NIMBLE_MAX_CCCDS",
                                "name": "BT_NIMBLE_MAX_CCCDS",
                                "range": null,
                                "title": "Maximum number of CCC descriptors to save across reboots",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Defines maximum number of BLE Connection Oriented Channels. When set to (0), BLE COC is not compiled in",
                                "id": "BT_NIMBLE_L2CAP_COC_MAX_NUM",
                                "name": "BT_NIMBLE_L2CAP_COC_MAX_NUM",
                                "range": null,
                                "title": "Maximum number of connection oriented channels",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BT_NIMBLE_PINNED_TO_CORE_CHOICE>",
                                        "help": null,
                                        "id": "BT_NIMBLE_PINNED_TO_CORE_0",
                                        "name": "BT_NIMBLE_PINNED_TO_CORE_0",
                                        "range": null,
                                        "title": "Core 0 (PRO CPU)",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "!FREERTOS_UNICORE && <choice BT_NIMBLE_PINNED_TO_CORE_CHOICE>",
                                        "help": null,
                                        "id": "BT_NIMBLE_PINNED_TO_CORE_1",
                                        "name": "BT_NIMBLE_PINNED_TO_CORE_1",
                                        "range": null,
                                        "title": "Core 1 (APP CPU)",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED && !FREERTOS_UNICORE && BT_NIMBLE_ENABLED",
                                "help": "The CPU core on which NimBLE host will run. You can choose Core 0 or Core 1.\nCannot specify no-affinity",
                                "id": "component-config-bluetooth-nimble-options-the-cpu-core-on-which-nimble-host-will-run",
                                "name": "BT_NIMBLE_PINNED_TO_CORE_CHOICE",
                                "title": "The CPU core on which NimBLE host will run",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": null,
                                "id": "BT_NIMBLE_PINNED_TO_CORE",
                                "name": "BT_NIMBLE_PINNED_TO_CORE",
                                "range": null,
                                "title": null,
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This configures stack size of NimBLE host task",
                                "id": "BT_NIMBLE_TASK_STACK_SIZE",
                                "name": "BT_NIMBLE_TASK_STACK_SIZE",
                                "range": null,
                                "title": "NimBLE Host task stack size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": null,
                                "id": "BT_NIMBLE_ROLE_CENTRAL",
                                "name": "BT_NIMBLE_ROLE_CENTRAL",
                                "range": null,
                                "title": "Enable BLE Central role",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": null,
                                "id": "BT_NIMBLE_ROLE_PERIPHERAL",
                                "name": "BT_NIMBLE_ROLE_PERIPHERAL",
                                "range": null,
                                "title": "Enable BLE Peripheral role",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": null,
                                "id": "BT_NIMBLE_ROLE_BROADCASTER",
                                "name": "BT_NIMBLE_ROLE_BROADCASTER",
                                "range": null,
                                "title": "Enable BLE Broadcaster role",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": null,
                                "id": "BT_NIMBLE_ROLE_OBSERVER",
                                "name": "BT_NIMBLE_ROLE_OBSERVER",
                                "range": null,
                                "title": "Enable BLE Observer role",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Enable this flag to make bonding persistent across device reboots",
                                "id": "BT_NIMBLE_NVS_PERSIST",
                                "name": "BT_NIMBLE_NVS_PERSIST",
                                "range": null,
                                "title": "Persist the BLE Bonding keys in NVS",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Enable security manager legacy pairing",
                                "id": "BT_NIMBLE_SM_LEGACY",
                                "name": "BT_NIMBLE_SM_LEGACY",
                                "range": null,
                                "title": "Security manager legacy pairing",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Enable security manager secure connections",
                                "id": "BT_NIMBLE_SM_SC",
                                "name": "BT_NIMBLE_SM_SC",
                                "range": null,
                                "title": "Security manager secure connections (4.2)",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This enables extra runtime asserts and host debugging",
                                "id": "BT_NIMBLE_DEBUG",
                                "name": "BT_NIMBLE_DEBUG",
                                "range": null,
                                "title": "Enable extra runtime asserts and host debugging",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_SM_SC && BT_NIMBLE_ENABLED",
                                "help": "If this option is enabled, SM uses predefined DH key pair as described\nin Core Specification, Vol. 3, Part H, 2.3.5.6.1. This allows to\ndecrypt air traffic easily and thus should only be used for debugging.",
                                "id": "BT_NIMBLE_SM_SC_DEBUG_KEYS",
                                "name": "BT_NIMBLE_SM_SC_DEBUG_KEYS",
                                "range": null,
                                "title": "Use predefined public-private key pair",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "The Device Name characteristic shall contain the name of the device as an UTF-8 string.\nThis name can be changed by using API ble_svc_gap_device_name_set()",
                                "id": "BT_NIMBLE_SVC_GAP_DEVICE_NAME",
                                "name": "BT_NIMBLE_SVC_GAP_DEVICE_NAME",
                                "range": null,
                                "title": "BLE GAP default device name",
                                "type": "string"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Device Name characteristic value shall be 0 to 248 octets in length",
                                "id": "BT_NIMBLE_GAP_DEVICE_NAME_MAX_LEN",
                                "name": "BT_NIMBLE_GAP_DEVICE_NAME_MAX_LEN",
                                "range": null,
                                "title": "Maximum length of BLE device name in octets",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This is the default value of ATT MTU indicated by the device during an ATT MTU exchange.\nThis value can be changed using API ble_att_set_preferred_mtu()",
                                "id": "BT_NIMBLE_ATT_PREFERRED_MTU",
                                "name": "BT_NIMBLE_ATT_PREFERRED_MTU",
                                "range": null,
                                "title": "Preferred MTU size in octets",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Standard BLE GAP Appearance value in HEX format e.g. 0x02C0",
                                "id": "BT_NIMBLE_SVC_GAP_APPEARANCE",
                                "name": "BT_NIMBLE_SVC_GAP_APPEARANCE",
                                "range": null,
                                "title": "External appearance of the device",
                                "type": "hex"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "The number of ACL data buffers.",
                                "id": "BT_NIMBLE_ACL_BUF_COUNT",
                                "name": "BT_NIMBLE_ACL_BUF_COUNT",
                                "range": null,
                                "title": "ACL Buffer count",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This is the maximum size of the data portion of HCI ACL data packets.\nIt does not include the HCI data header (of 4 bytes)",
                                "id": "BT_NIMBLE_ACL_BUF_SIZE",
                                "name": "BT_NIMBLE_ACL_BUF_SIZE",
                                "range": null,
                                "title": "ACL Buffer size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This is the size of each HCI event buffer in bytes. In case of\nextended advertising, packets can be fragmented. 257 bytes is the\nmaximum size of a packet.",
                                "id": "BT_NIMBLE_HCI_EVT_BUF_SIZE",
                                "name": "BT_NIMBLE_HCI_EVT_BUF_SIZE",
                                "range": null,
                                "title": "HCI Event Buffer size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This is the high priority HCI events' buffer size. High-priority\nevent buffers are for everything except advertising reports. If there\nare no free high-priority event buffers then host will try to allocate a\nlow-priority buffer instead",
                                "id": "BT_NIMBLE_HCI_EVT_HI_BUF_COUNT",
                                "name": "BT_NIMBLE_HCI_EVT_HI_BUF_COUNT",
                                "range": null,
                                "title": "High Priority HCI Event Buffer count",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "This is the low priority HCI events' buffer size. Low-priority event\nbuffers are only used for advertising reports. If there are no free\nlow-priority event buffers, then an incoming advertising report will\nget dropped",
                                "id": "BT_NIMBLE_HCI_EVT_LO_BUF_COUNT",
                                "name": "BT_NIMBLE_HCI_EVT_LO_BUF_COUNT",
                                "range": null,
                                "title": "Low Priority HCI Event Buffer count",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "MSYS is a system level mbuf registry. For prepare write & prepare\nresponses MBUFs are allocated out of msys_1 pool. For NIMBLE_MESH\nenabled cases, this block count is increased by 8 than user defined\ncount.",
                                "id": "BT_NIMBLE_MSYS1_BLOCK_COUNT",
                                "name": "BT_NIMBLE_MSYS1_BLOCK_COUNT",
                                "range": null,
                                "title": "MSYS_1 Block Count",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_HS_FLOW_CTRL && BT_NIMBLE_ENABLED",
                                        "help": "Host flow control interval in msecs",
                                        "id": "BT_NIMBLE_HS_FLOW_CTRL_ITVL",
                                        "name": "BT_NIMBLE_HS_FLOW_CTRL_ITVL",
                                        "range": null,
                                        "title": "Host Flow control interval",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_HS_FLOW_CTRL && BT_NIMBLE_ENABLED",
                                        "help": "Host flow control threshold, if the number of free buffers are at or\nbelow this threshold, send an immediate number-of-completed-packets\nevent",
                                        "id": "BT_NIMBLE_HS_FLOW_CTRL_THRESH",
                                        "name": "BT_NIMBLE_HS_FLOW_CTRL_THRESH",
                                        "range": null,
                                        "title": "Host Flow control threshold",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_HS_FLOW_CTRL && BT_NIMBLE_ENABLED",
                                        "help": "Enable this option to send number-of-completed-packets event to\ncontroller after disconnection",
                                        "id": "BT_NIMBLE_HS_FLOW_CTRL_TX_ON_DISCONNECT",
                                        "name": "BT_NIMBLE_HS_FLOW_CTRL_TX_ON_DISCONNECT",
                                        "range": null,
                                        "title": "Host Flow control on disconnect",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Enable Host Flow control",
                                "id": "BT_NIMBLE_HS_FLOW_CTRL",
                                "name": "BT_NIMBLE_HS_FLOW_CTRL",
                                "range": null,
                                "title": "Enable Host Flow control",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Time interval between RPA address change. This is applicable in case of\nHost based RPA",
                                "id": "BT_NIMBLE_RPA_TIMEOUT",
                                "name": "BT_NIMBLE_RPA_TIMEOUT",
                                "range": null,
                                "title": "RPA timeout in seconds",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Enable proxy. This is automatically set whenever NIMBLE_MESH_PB_GATT or\nNIMBLE_MESH_GATT_PROXY is set",
                                        "id": "BT_NIMBLE_MESH_PROXY",
                                        "name": "BT_NIMBLE_MESH_PROXY",
                                        "range": null,
                                        "title": "Enable mesh proxy functionality",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BT_NIMBLE_MESH_PROV && BT_NIMBLE_ENABLED",
                                                "help": "Enable this option to allow the device to be provisioned over\nthe advertising bearer",
                                                "id": "BT_NIMBLE_MESH_PB_ADV",
                                                "name": "BT_NIMBLE_MESH_PB_ADV",
                                                "range": null,
                                                "title": "Enable mesh provisioning over advertising bearer",
                                                "type": "bool"
                                            },
                                            {
                                                "children": [],
                                                "depends_on": "BT_NIMBLE_MESH_PROV && BT_NIMBLE_ENABLED",
                                                "help": "Enable this option to allow the device to be provisioned over the GATT\nbearer",
                                                "id": "BT_NIMBLE_MESH_PB_GATT",
                                                "name": "BT_NIMBLE_MESH_PB_GATT",
                                                "range": null,
                                                "title": "Enable mesh provisioning over GATT bearer",
                                                "type": "bool"
                                            }
                                        ],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Enable mesh provisioning",
                                        "id": "BT_NIMBLE_MESH_PROV",
                                        "name": "BT_NIMBLE_MESH_PROV",
                                        "range": null,
                                        "title": "Enable BLE mesh provisioning",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "This option enables support for the Mesh GATT Proxy Service,\ni.e. the ability to act as a proxy between a Mesh GATT Client\nand a Mesh network",
                                        "id": "BT_NIMBLE_MESH_GATT_PROXY",
                                        "name": "BT_NIMBLE_MESH_GATT_PROXY",
                                        "range": null,
                                        "title": "Enable GATT Proxy functionality",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Support for acting as a Mesh Relay Node",
                                        "id": "BT_NIMBLE_MESH_RELAY",
                                        "name": "BT_NIMBLE_MESH_RELAY",
                                        "range": null,
                                        "title": "Enable mesh relay functionality",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Enable this option to be able to act as a Low Power Node",
                                        "id": "BT_NIMBLE_MESH_LOW_POWER",
                                        "name": "BT_NIMBLE_MESH_LOW_POWER",
                                        "range": null,
                                        "title": "Enable mesh low power mode",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Enable this option to be able to act as a Friend Node",
                                        "id": "BT_NIMBLE_MESH_FRIEND",
                                        "name": "BT_NIMBLE_MESH_FRIEND",
                                        "range": null,
                                        "title": "Enable mesh friend functionality",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "This value defines Bluetooth Mesh device/node name",
                                        "id": "BT_NIMBLE_MESH_DEVICE_NAME",
                                        "name": "BT_NIMBLE_MESH_DEVICE_NAME",
                                        "range": null,
                                        "title": "Set mesh device name",
                                        "type": "string"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Defines mesh node count.",
                                        "id": "BT_NIMBLE_MESH_NODE_COUNT",
                                        "name": "BT_NIMBLE_MESH_NODE_COUNT",
                                        "range": null,
                                        "title": "Set mesh node count",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_MESH && BT_NIMBLE_ENABLED",
                                        "help": "Enable mesh provisioner.",
                                        "id": "BT_NIMBLE_MESH_PROVISIONER",
                                        "name": "BT_NIMBLE_MESH_PROVISIONER",
                                        "range": null,
                                        "title": "Enable BLE mesh provisioner",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Enable BLE Mesh functionality",
                                "id": "BT_NIMBLE_MESH",
                                "is_menuconfig": true,
                                "name": "BT_NIMBLE_MESH",
                                "range": null,
                                "title": "Enable BLE mesh functionality",
                                "type": "menu"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Enable this option to choose mbedTLS instead of TinyCrypt for crypto\ncomputations.",
                                "id": "BT_NIMBLE_CRYPTO_STACK_MBEDTLS",
                                "name": "BT_NIMBLE_CRYPTO_STACK_MBEDTLS",
                                "range": null,
                                "title": "Override TinyCrypt with mbedTLS for crypto computations",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "BLE Host stop procedure timeout in milliseconds.",
                                "id": "BT_NIMBLE_HS_STOP_TIMEOUT_MS",
                                "name": "BT_NIMBLE_HS_STOP_TIMEOUT_MS",
                                "range": null,
                                "title": "BLE host stop timeout in msec",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && !IDF_TARGET_ESP32 && BT_NIMBLE_ENABLED",
                                "help": "Use this option to do host based Random Private Address resolution.\nIf this option is disabled then controller based privacy is used.",
                                "id": "BT_NIMBLE_HOST_BASED_PRIVACY",
                                "name": "BT_NIMBLE_HOST_BASED_PRIVACY",
                                "range": null,
                                "title": "Enable host based privacy for random address.",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLE_CONN_REATTEMPT && BT_NIMBLE_ENABLED",
                                        "help": "Defines maximum number of connection reattempts.",
                                        "id": "BT_NIMBLE_MAX_CONN_REATTEMPT",
                                        "name": "BT_NIMBLE_MAX_CONN_REATTEMPT",
                                        "range": null,
                                        "title": "Maximum number connection reattempts",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED",
                                "help": "Enable to make the NimBLE host to reattempt GAP connection on connection\nestablishment failure.",
                                "id": "BT_NIMBLE_ENABLE_CONN_REATTEMPT",
                                "name": "BT_NIMBLE_ENABLE_CONN_REATTEMPT",
                                "range": null,
                                "title": "Enable connection reattempts on connection establishment error",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_EXT_ADV && BT_NIMBLE_ENABLED",
                                        "help": "Change this option to set maximum number of extended advertising\ninstances. Minimum there is always one instance of\nadvertising. Enter how many more advertising instances you\nwant.",
                                        "id": "BT_NIMBLE_MAX_EXT_ADV_INSTANCES",
                                        "name": "BT_NIMBLE_MAX_EXT_ADV_INSTANCES",
                                        "range": null,
                                        "title": "Maximum number of extended advertising instances.",
                                        "type": "int"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "BT_NIMBLE_EXT_ADV && BT_NIMBLE_ENABLED",
                                        "help": "Defines size of extended advertising data. Size should not increase\n1650.",
                                        "id": "BT_NIMBLE_MAX_EXT_ADV_DATA_LEN",
                                        "name": "BT_NIMBLE_MAX_EXT_ADV_DATA_LEN",
                                        "range": null,
                                        "title": "Maximum length of the advertising data.",
                                        "type": "int"
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "depends_on": "BT_NIMBLE_ENABLE_PERIODIC_ADV && BT_NIMBLE_ENABLED",
                                                "help": "Set this option to set the upper limit for number of periodic sync\nconnections. This should be less than maximum connections allowed by\ncontroller.",
                                                "id": "BT_NIMBLE_MAX_PERIODIC_SYNCS",
                                                "name": "BT_NIMBLE_MAX_PERIODIC_SYNCS",
                                                "range": null,
                                                "title": "Maximum number of periodic advertising syncs.",
                                                "type": "int"
                                            }
                                        ],
                                        "depends_on": "BT_NIMBLE_EXT_ADV && BT_NIMBLE_ENABLED",
                                        "help": "Enable this option to start periodic advertisement.",
                                        "id": "BT_NIMBLE_ENABLE_PERIODIC_ADV",
                                        "name": "BT_NIMBLE_ENABLE_PERIODIC_ADV",
                                        "range": null,
                                        "title": "Enable periodic advertisement.",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_SOC_SUPPORT_5_0 && BT_NIMBLE_ENABLED",
                                "help": "Enable this option to do extended advertising. Extended advertising\nwill be supported from BLE 5.0 onwards.",
                                "id": "BT_NIMBLE_EXT_ADV",
                                "name": "BT_NIMBLE_EXT_ADV",
                                "range": null,
                                "title": "Enable extended advertising.",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED && BT_NIMBLE_ENABLED",
                                "help": "Set this option to enable blufi functionality.",
                                "id": "BT_NIMBLE_BLUFI_ENABLE",
                                "name": "BT_NIMBLE_BLUFI_ENABLE",
                                "range": null,
                                "title": "Enable blufi functionality",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BT_NIMBLE_ENABLED",
                                "help": "Set this option to use Esp Timer which has higher priority timer instead of FreeRTOS timer",
                                "id": "BT_NIMBLE_USE_ESP_TIMER",
                                "name": "BT_NIMBLE_USE_ESP_TIMER",
                                "range": null,
                                "title": "Enable Esp Timer for Nimble",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BT_NIMBLE_ENABLED",
                        "id": "component-config-bluetooth-nimble-options",
                        "title": "NimBLE Options",
                        "type": "menu"
                    }
                ],
                "depends_on": null,
                "id": "component-config-bluetooth",
                "title": "Bluetooth",
                "type": "menu"
            },
            {
                "children": [
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "It is a temporary solution and needs further modifications.",
                        "id": "BLE_MESH_HCI_5_0",
                        "name": "BLE_MESH_HCI_5_0",
                        "range": null,
                        "title": "Support sending 20ms non-connectable adv packets",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BT_BLUEDROID_ENABLED && BLE_MESH",
                        "help": "Enable this option to allow using specific duplicate scan filter\nin BLE Mesh, and Scan Duplicate Type must be set by choosing the\noption in the Bluetooth Controller section in menuconfig, which is\n\"Scan Duplicate By Device Address and Advertising Data\".",
                        "id": "BLE_MESH_USE_DUPLICATE_SCAN",
                        "name": "BLE_MESH_USE_DUPLICATE_SCAN",
                        "range": null,
                        "title": "Support Duplicate Scan in BLE Mesh",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "<choice BLE_MESH_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "BLE_MESH_MEM_ALLOC_MODE_INTERNAL",
                                "name": "BLE_MESH_MEM_ALLOC_MODE_INTERNAL",
                                "range": null,
                                "title": "Internal DRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && <choice BLE_MESH_MEM_ALLOC_MODE>",
                                "help": null,
                                "id": "BLE_MESH_MEM_ALLOC_MODE_EXTERNAL",
                                "name": "BLE_MESH_MEM_ALLOC_MODE_EXTERNAL",
                                "range": null,
                                "title": "External SPIRAM",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "<choice BLE_MESH_MEM_ALLOC_MODE>",
                                "help": "Enable this option to use the default memory allocation strategy when\nexternal SPIRAM is enabled. See the SPIRAM options for more details.",
                                "id": "BLE_MESH_MEM_ALLOC_MODE_DEFAULT",
                                "name": "BLE_MESH_MEM_ALLOC_MODE_DEFAULT",
                                "range": null,
                                "title": "Default alloc mode",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY && <choice BLE_MESH_MEM_ALLOC_MODE>",
                                "help": "Allows to use IRAM memory region as 8bit accessible region. Every\nunaligned (8bit or 16bit) access will result in an exception and\nincur penalty of certain clock cycles per unaligned read/write.",
                                "id": "BLE_MESH_MEM_ALLOC_MODE_IRAM_8BIT",
                                "name": "BLE_MESH_MEM_ALLOC_MODE_IRAM_8BIT",
                                "range": null,
                                "title": "Internal IRAM",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "help": "Allocation strategy for BLE Mesh stack, essentially provides ability to\nallocate all required dynamic allocations from,\n\n- Internal DRAM memory only\n- External SPIRAM memory only\n- Either internal or external memory based on default malloc()\n  behavior in ESP-IDF\n- Internal IRAM memory wherever applicable else internal DRAM\n\nRecommended mode here is always internal (*), since that is most preferred\nfrom security perspective. But if application requirement does not\nallow sufficient free internal memory then alternate mode can be\nselected.\n\n(*) In case of ESP32-S2/ESP32-S3, hardware allows encryption of external\nSPIRAM contents provided hardware flash encryption feature is enabled.\nIn that case, using external SPIRAM allocation strategy is also safe choice\nfrom security perspective.",
                        "id": "component-config-esp-ble-mesh-support-memory-allocation-strategy",
                        "name": "BLE_MESH_MEM_ALLOC_MODE",
                        "title": "Memory allocation strategy",
                        "type": "choice"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_SPIRAM_SUPPORT && <choice BLE_MESH_FREERTOS_STATIC_ALLOC_MODE>",
                                        "help": "If enabled, BLE Mesh allocates dynamic memory from external SPIRAM for\nFreeRTOS objects, i.e. mutex, queue, and task stack. External SPIRAM\ncan only be used for task stack when SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY\nis enabled. See the SPIRAM options for more details.",
                                        "id": "BLE_MESH_FREERTOS_STATIC_ALLOC_EXTERNAL",
                                        "name": "BLE_MESH_FREERTOS_STATIC_ALLOC_EXTERNAL",
                                        "range": null,
                                        "title": "External SPIRAM",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY && <choice BLE_MESH_FREERTOS_STATIC_ALLOC_MODE>",
                                        "help": "If enabled, BLE Mesh allocates dynamic memory from internal IRAM for\nFreeRTOS objects, i.e. mutex, queue. Note: IRAM region cannot be used\nas task stack.",
                                        "id": "BLE_MESH_FREERTOS_STATIC_ALLOC_IRAM_8BIT",
                                        "name": "BLE_MESH_FREERTOS_STATIC_ALLOC_IRAM_8BIT",
                                        "range": null,
                                        "title": "Internal IRAM",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BLE_MESH_FREERTOS_STATIC_ALLOC && BLE_MESH",
                                "help": "Choose the memory to be used for FreeRTOS objects.",
                                "id": "component-config-esp-ble-mesh-support-enable-freertos-static-allocation-memory-allocation-for-freertos-objects",
                                "name": "BLE_MESH_FREERTOS_STATIC_ALLOC_MODE",
                                "title": "Memory allocation for FreeRTOS objects",
                                "type": "choice"
                            }
                        ],
                        "depends_on": "FREERTOS_SUPPORT_STATIC_ALLOCATION && (ESP32_SPIRAM_SUPPORT || ESP32_IRAM_AS_8BIT_ACCESSIBLE_MEMORY) && BLE_MESH",
                        "help": "Enable this option to use FreeRTOS static allocation APIs for BLE Mesh,\nwhich provides the ability to use different dynamic memory (i.e. SPIRAM\nor IRAM) for FreeRTOS objects.\nIf this option is disabled, the FreeRTOS static allocation APIs will not\nbe used, and internal DRAM will be allocated for FreeRTOS objects.",
                        "id": "BLE_MESH_FREERTOS_STATIC_ALLOC",
                        "name": "BLE_MESH_FREERTOS_STATIC_ALLOC",
                        "range": null,
                        "title": "Enable FreeRTOS static allocation",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "If enabled, users can use the function esp_ble_mesh_deinit() to de-initialize\nthe whole BLE Mesh stack.",
                        "id": "BLE_MESH_DEINIT",
                        "name": "BLE_MESH_DEINIT",
                        "range": null,
                        "title": "Support de-initialize BLE Mesh stack",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BLE_MESH_SUPPORT_BLE_ADV && BLE_MESH",
                                        "help": "Number of advertising buffers for BLE packets available.",
                                        "id": "BLE_MESH_BLE_ADV_BUF_COUNT",
                                        "name": "BLE_MESH_BLE_ADV_BUF_COUNT",
                                        "range": null,
                                        "title": "Number of advertising buffers for BLE advertising packets",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BLE_MESH",
                                "help": "When selected, users can send normal BLE advertising packets\nwith specific API.",
                                "id": "BLE_MESH_SUPPORT_BLE_ADV",
                                "name": "BLE_MESH_SUPPORT_BLE_ADV",
                                "range": null,
                                "title": "Support sending normal BLE advertising packets",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "When selected, users can register a callback and receive normal BLE\nadvertising packets in the application layer.",
                                "id": "BLE_MESH_SUPPORT_BLE_SCAN",
                                "name": "BLE_MESH_SUPPORT_BLE_SCAN",
                                "range": null,
                                "title": "Support scanning normal BLE advertising packets",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "id": "component-config-esp-ble-mesh-support-ble-mesh-and-ble-coexistence-support",
                        "title": "BLE Mesh and BLE coexistence support",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Enable this option to allow BLE Mesh fast provisioning solution to be used.\nWhen there are multiple unprovisioned devices around, fast provisioning can\ngreatly reduce the time consumption of the whole provisioning process.\nWhen this option is enabled, and after an unprovisioned device is provisioned\ninto a node successfully, it can be changed to a temporary Provisioner.",
                        "id": "BLE_MESH_FAST_PROV",
                        "name": "BLE_MESH_FAST_PROV",
                        "range": null,
                        "title": "Enable BLE Mesh Fast Provisioning",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Enable the device to be provisioned into a node. This option should be\nenabled when an unprovisioned device is going to be provisioned into a\nnode and communicate with other nodes in the BLE Mesh network.",
                        "id": "BLE_MESH_NODE",
                        "name": "BLE_MESH_NODE",
                        "range": null,
                        "title": "Support for BLE Mesh Node",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "This option specifies how many unprovisioned devices can be added to device\nqueue for provisioning. Users can use this option to define the size of the\nqueue in the bottom layer which is used to store unprovisioned device\ninformation (e.g. Device UUID, address).",
                                "id": "BLE_MESH_WAIT_FOR_PROV_MAX_DEV_NUM",
                                "name": "BLE_MESH_WAIT_FOR_PROV_MAX_DEV_NUM",
                                "range": null,
                                "title": "Maximum number of unprovisioned devices that can be added to device queue",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "This option specifies how many devices can be provisioned by a Provisioner.\nThis value indicates the maximum number of unprovisioned devices which can be\nprovisioned by a Provisioner. For instance, if the value is 6, it means the\nProvisioner can provision up to 6 unprovisioned devices.\nTheoretically a Provisioner without the limitation of its memory can provision\nup to 32766 unprovisioned devices, here we limit the maximum number to 100\njust to limit the memory used by a Provisioner. The bigger the value is, the\nmore memory it will cost by a Provisioner to store the information of nodes.",
                                "id": "BLE_MESH_MAX_PROV_NODES",
                                "name": "BLE_MESH_MAX_PROV_NODES",
                                "range": null,
                                "title": "Maximum number of devices that can be provisioned by Provisioner",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_PB_ADV && BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "This option specifies how many devices can be provisioned at the same time\nusing PB-ADV. For examples, if the value is 2, it means a Provisioner can\nprovision two unprovisioned devices with PB-ADV at the same time.",
                                "id": "BLE_MESH_PBA_SAME_TIME",
                                "name": "BLE_MESH_PBA_SAME_TIME",
                                "range": null,
                                "title": "Maximum number of PB-ADV running at the same time by Provisioner",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_PB_GATT && BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "This option specifies how many devices can be provisioned at the same\ntime using PB-GATT. For example, if the value is 2, it means a Provisioner\ncan provision two unprovisioned devices with PB-GATT at the same time.",
                                "id": "BLE_MESH_PBG_SAME_TIME",
                                "name": "BLE_MESH_PBG_SAME_TIME",
                                "range": null,
                                "title": "Maximum number of PB-GATT running at the same time by Provisioner",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "This option specifies how many subnets per network a Provisioner can create.\nIndeed, this value decides the number of network keys which can be added by a Provisioner.",
                                "id": "BLE_MESH_PROVISIONER_SUBNET_COUNT",
                                "name": "BLE_MESH_PROVISIONER_SUBNET_COUNT",
                                "range": null,
                                "title": "Maximum number of mesh subnets that can be created by Provisioner",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "This option specifies how many application keys the Provisioner can have.\nIndeed, this value decides the number of the application keys which can be added by a Provisioner.",
                                "id": "BLE_MESH_PROVISIONER_APP_KEY_COUNT",
                                "name": "BLE_MESH_PROVISIONER_APP_KEY_COUNT",
                                "range": null,
                                "title": "Maximum number of application keys that can be owned by Provisioner",
                                "type": "int"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BLE_MESH_PROVISIONER_RECV_HB && BLE_MESH_PROVISIONER && BLE_MESH",
                                        "help": "This option specifies how many heartbeat filter entries Provisioner supports.\nThe heartbeat filter (acceptlist or rejectlist) entries are used to store a\nlist of SRC and DST which can be used to decide if a heartbeat message will\nbe processed and notified to the application layer by Provisioner.\nNote: The filter is an empty rejectlist by default.",
                                        "id": "BLE_MESH_PROVISIONER_RECV_HB_FILTER_SIZE",
                                        "name": "BLE_MESH_PROVISIONER_RECV_HB_FILTER_SIZE",
                                        "range": null,
                                        "title": "Maximum number of filter entries for receiving Heartbeat messages",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BLE_MESH_PROVISIONER && BLE_MESH",
                                "help": "When this option is enabled, Provisioner can call specific functions to enable\nor disable receiving Heartbeat messages and notify them to the application layer.",
                                "id": "BLE_MESH_PROVISIONER_RECV_HB",
                                "name": "BLE_MESH_PROVISIONER_RECV_HB",
                                "range": null,
                                "title": "Support receiving Heartbeat messages",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "help": "Enable the device to be a Provisioner. The option should be enabled when\na device is going to act as a Provisioner and provision unprovisioned\ndevices into the BLE Mesh network.",
                        "id": "BLE_MESH_PROVISIONER",
                        "name": "BLE_MESH_PROVISIONER",
                        "range": null,
                        "title": "Support for BLE Mesh Provisioner",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Enable this option to support BLE Mesh Provisioning functionality. For\nBLE Mesh, this option should be always enabled.",
                        "id": "BLE_MESH_PROV",
                        "name": "BLE_MESH_PROV",
                        "range": null,
                        "title": "BLE Mesh Provisioning support",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_NODE && BLE_MESH_PB_ADV && BLE_MESH",
                                "help": "This option specifies the interval of sending two consecutive unprovisioned\ndevice beacon, users can use this option to change the frequency of sending\nunprovisioned device beacon. For example, if the value is 5, it means the\nunprovisioned device beacon will send every 5 seconds. When the option of\nBLE_MESH_FAST_PROV is selected, the value is better to be 3 seconds, or less.",
                                "id": "BLE_MESH_UNPROVISIONED_BEACON_INTERVAL",
                                "name": "BLE_MESH_UNPROVISIONED_BEACON_INTERVAL",
                                "range": null,
                                "title": "Interval between two consecutive Unprovisioned Device Beacon",
                                "type": "int"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "help": "Enable this option to allow the device to be provisioned over the\nadvertising bearer. This option should be enabled if PB-ADV is\ngoing to be used during provisioning procedure.",
                        "id": "BLE_MESH_PB_ADV",
                        "name": "BLE_MESH_PB_ADV",
                        "range": null,
                        "title": "Provisioning support using the advertising bearer (PB-ADV)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Enable this option to allow the device to be provisioned over GATT.\nThis option should be enabled if PB-GATT is going to be used during\nprovisioning procedure.\n\n# Virtual option enabled whenever any Proxy protocol is needed",
                        "id": "BLE_MESH_PB_GATT",
                        "name": "BLE_MESH_PB_GATT",
                        "range": null,
                        "title": "Provisioning support using GATT (PB-GATT)",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Enable this option to support BLE Mesh Proxy protocol used by PB-GATT\nand other proxy pdu transmission.",
                        "id": "BLE_MESH_PROXY",
                        "name": "BLE_MESH_PROXY",
                        "range": null,
                        "title": "BLE Mesh Proxy protocol support",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_GATT_PROXY_SERVER && BLE_MESH",
                                "help": "This option determines for how long the local node advertises using\nNode Identity. The given value is in seconds. The specification limits\nthis to 60 seconds and lists it as the recommended value as well.\nSo leaving the default value is the safest option.\nWhen an unprovisioned device is provisioned successfully and becomes a\nnode, it will start to advertise using Node Identity during the time\nset by this option. And after that, Network ID will be advertised.",
                                "id": "BLE_MESH_NODE_ID_TIMEOUT",
                                "name": "BLE_MESH_NODE_ID_TIMEOUT",
                                "range": null,
                                "title": "Node Identity advertising timeout",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_GATT_PROXY_SERVER && BLE_MESH",
                                "help": "This option specifies how many Proxy Filter entries the local node supports.\nThe entries of Proxy filter (whitelist or blacklist) are used to store a\nlist of addresses which can be used to decide which messages will be forwarded\nto the Proxy Client by the Proxy Server.",
                                "id": "BLE_MESH_PROXY_FILTER_SIZE",
                                "name": "BLE_MESH_PROXY_FILTER_SIZE",
                                "range": null,
                                "title": "Maximum number of filter entries per Proxy Client",
                                "type": "int"
                            }
                        ],
                        "depends_on": "BLE_MESH_NODE && BLE_MESH",
                        "help": "This option enables support for Mesh GATT Proxy Service, i.e. the\nability to act as a proxy between a Mesh GATT Client and a Mesh network.\nThis option should be enabled if a node is going to be a Proxy Server.",
                        "id": "BLE_MESH_GATT_PROXY_SERVER",
                        "name": "BLE_MESH_GATT_PROXY_SERVER",
                        "range": null,
                        "title": "BLE Mesh GATT Proxy Server",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option enables support for Mesh GATT Proxy Client. The Proxy Client\ncan use the GATT bearer to send mesh messages to a node that supports the\nadvertising bearer.",
                        "id": "BLE_MESH_GATT_PROXY_CLIENT",
                        "name": "BLE_MESH_GATT_PROXY_CLIENT",
                        "range": null,
                        "title": "BLE Mesh GATT Proxy Client",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Enable BLE Mesh net buffer pool tracking. This option is used to introduce another\nvariable in the bottom layer to record the usage of advertising buffers of BLE Mesh\ndevices. Recommend to enable this option as default.",
                        "id": "BLE_MESH_NET_BUF_POOL_USAGE",
                        "name": "BLE_MESH_NET_BUF_POOL_USAGE",
                        "range": null,
                        "title": null,
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_SETTINGS && BLE_MESH",
                                "help": "This value defines in seconds how soon any pending changes are actually\nwritten into persistent storage (flash) after a change occurs.\nThe option allows nodes to delay a certain period of time to save proper\ninformation to flash. The default value is 0, which means information\nwill be stored immediately once there are updates.",
                                "id": "BLE_MESH_STORE_TIMEOUT",
                                "name": "BLE_MESH_STORE_TIMEOUT",
                                "range": null,
                                "title": "Delay (in seconds) before storing anything persistently",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_SETTINGS && BLE_MESH",
                                "help": "This value defines how often the local sequence number gets updated in\npersistent storage (i.e. flash). e.g. a value of 100 means that the\nsequence number will be stored to flash on every 100th increment.\nIf the node sends messages very frequently a higher value makes more\nsense, whereas if the node sends infrequently a value as low as 0\n(update storage for every increment) can make sense. When the stack\ngets initialized it will add sequence number to the last stored one,\nso that it starts off with a value that's guaranteed to be larger than\nthe last one used before power off.",
                                "id": "BLE_MESH_SEQ_STORE_RATE",
                                "name": "BLE_MESH_SEQ_STORE_RATE",
                                "range": null,
                                "title": "How often the sequence number gets updated in storage",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_SETTINGS && BLE_MESH",
                                "help": "This value defines in seconds how soon the RPL (Replay Protection List)\ngets written to persistent storage after a change occurs. If the node\nreceives messages frequently, then a large value is recommended. If the\nnode receives messages rarely, then the value can be as low as 0 (which\nmeans the RPL is written into the storage immediately).\nNote that if the node operates in a security-sensitive case, and there is\na risk of sudden power-off, then a value of 0 is strongly recommended.\nOtherwise, a power loss before RPL being written into the storage may\nintroduce message replay attacks and system security will be in a\nvulnerable state.",
                                "id": "BLE_MESH_RPL_STORE_TIMEOUT",
                                "name": "BLE_MESH_RPL_STORE_TIMEOUT",
                                "range": null,
                                "title": "Minimum frequency that the RPL gets updated in storage",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_NODE && BLE_MESH_SETTINGS && BLE_MESH",
                                "help": "This option is created to solve the issue of failure in recovering\nnode information after mesh stack updates. In the old version mesh\nstack, there is no key of \"mesh/role\" in nvs. In the new version\nmesh stack, key of \"mesh/role\" is added in nvs, recovering node\ninformation needs to check \"mesh/role\" key in nvs and implements\nselective recovery of mesh node information. Therefore, there may\nbe failure in recovering node information during node restarting\nafter OTA.\n\nThe new version mesh stack adds the option of \"mesh/role\" because\nwe have added the support of storing Provisioner information, while\nthe old version only supports storing node information.\n\nIf users are updating their nodes from old version to new version,\nwe recommend enabling this option, so that system could set the flag\nin advance before recovering node information and make sure the node\ninformation recovering could work as expected.",
                                "id": "BLE_MESH_SETTINGS_BACKWARD_COMPATIBILITY",
                                "name": "BLE_MESH_SETTINGS_BACKWARD_COMPATIBILITY",
                                "range": null,
                                "title": "A specific option for settings backward compatibility",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BLE_MESH_SPECIFIC_PARTITION && BLE_MESH_SETTINGS && BLE_MESH",
                                        "help": "This value defines the name of the specified NVS partition used by the\nmesh stack.",
                                        "id": "BLE_MESH_PARTITION_NAME",
                                        "name": "BLE_MESH_PARTITION_NAME",
                                        "range": null,
                                        "title": "Name of the NVS partition for BLE Mesh",
                                        "type": "string"
                                    }
                                ],
                                "depends_on": "BLE_MESH_SETTINGS && BLE_MESH",
                                "help": "When selected, the mesh stack will use a specified NVS partition instead of\ndefault NVS partition. Note that the specified partition must be registered\nwith NVS using nvs_flash_init_partition() API, and the partition must exists\nin the csv file.\nWhen Provisioner needs to store a large amount of nodes' information in the\nflash (e.g. more than 20), this option is recommended to be enabled.",
                                "id": "BLE_MESH_SPECIFIC_PARTITION",
                                "name": "BLE_MESH_SPECIFIC_PARTITION",
                                "range": null,
                                "title": "Use a specific NVS partition for BLE Mesh",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BLE_MESH_USE_MULTIPLE_NAMESPACE && BLE_MESH_SETTINGS && BLE_MESH",
                                        "help": "This option specifies the maximum NVS namespaces supported by Provisioner.",
                                        "id": "BLE_MESH_MAX_NVS_NAMESPACE",
                                        "name": "BLE_MESH_MAX_NVS_NAMESPACE",
                                        "range": null,
                                        "title": "Maximum number of NVS namespaces",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BLE_MESH_PROVISIONER && BLE_MESH_SETTINGS && BLE_MESH",
                                "help": "When selected, Provisioner can use different NVS namespaces to store\ndifferent instances of mesh information.\nFor example, if in the first room, Provisioner uses NetKey A, AppKey\nA and provisions three devices, these information will be treated as\nmesh information instance A. When the Provisioner moves to the second\nroom, it uses NetKey B, AppKey B and provisions two devices, then the\ninformation will be treated as mesh information instance B.\nHere instance A and instance B will be stored in different namespaces.\nWith this option enabled, Provisioner needs to use specific functions\nto open the corresponding NVS namespace, restore the mesh information,\nrelease the mesh information or erase the mesh information.",
                                "id": "BLE_MESH_USE_MULTIPLE_NAMESPACE",
                                "name": "BLE_MESH_USE_MULTIPLE_NAMESPACE",
                                "range": null,
                                "title": "Support using multiple NVS namespaces by Provisioner",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "help": "When selected, the BLE Mesh stack will take care of storing/restoring the BLE\nMesh configuration persistently in flash.\nIf the device is a BLE Mesh node, when this option is enabled, the configuration\nof the device will be stored persistently, including unicast address, NetKey,\nAppKey, etc.\nAnd if the device is a BLE Mesh Provisioner, the information of the device will\nbe stored persistently, including the information of provisioned nodes, NetKey,\nAppKey, etc.",
                        "id": "BLE_MESH_SETTINGS",
                        "name": "BLE_MESH_SETTINGS",
                        "range": null,
                        "title": "Store BLE Mesh configuration persistently",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option specifies how many subnets a Mesh network can have at the same time.\nIndeed, this value decides the number of the network keys which can be owned by a node.",
                        "id": "BLE_MESH_SUBNET_COUNT",
                        "name": "BLE_MESH_SUBNET_COUNT",
                        "range": null,
                        "title": "Maximum number of mesh subnets per network",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option specifies how many application keys the device can store per network.\nIndeed, this value decides the number of the application keys which can be owned by a node.",
                        "id": "BLE_MESH_APP_KEY_COUNT",
                        "name": "BLE_MESH_APP_KEY_COUNT",
                        "range": null,
                        "title": "Maximum number of application keys per network",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option specifies the maximum number of application keys to which each model\ncan be bound.",
                        "id": "BLE_MESH_MODEL_KEY_COUNT",
                        "name": "BLE_MESH_MODEL_KEY_COUNT",
                        "range": null,
                        "title": "Maximum number of application keys per model",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option specifies the maximum number of addresses to which each model can\nbe subscribed.",
                        "id": "BLE_MESH_MODEL_GROUP_COUNT",
                        "name": "BLE_MESH_MODEL_GROUP_COUNT",
                        "range": null,
                        "title": "Maximum number of group address subscriptions per model",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option specifies how many Label UUIDs can be stored.\nIndeed, this value decides the number of the Virtual Addresses can be supported by a node.",
                        "id": "BLE_MESH_LABEL_COUNT",
                        "name": "BLE_MESH_LABEL_COUNT",
                        "range": null,
                        "title": "Maximum number of Label UUIDs used for Virtual Addresses",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "This option specifies the maximum capacity of the replay protection list.\nIt is similar to Network message cache size, but has a different purpose.\nThe replay protection list is used to prevent a node from replay attack,\nwhich will store the source address and sequence number of the received\nmesh messages.\nFor Provisioner, the replay protection list size should not be smaller than\nthe maximum number of nodes whose information can be stored. And the element\nnumber of each node should also be taken into consideration. For example, if\nProvisioner can provision up to 20 nodes and each node contains two elements,\nthen the replay protection list size of Provisioner should be at least 40.",
                        "id": "BLE_MESH_CRPL",
                        "name": "BLE_MESH_CRPL",
                        "range": null,
                        "title": "Maximum capacity of the replay protection list",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Number of messages that are cached for the network. This helps prevent\nunnecessary decryption operations and unnecessary relays. This option\nis similar to Replay protection list, but has a different purpose.\nA node is not required to cache the entire Network PDU and may cache\nonly part of it for tracking, such as values for SRC/SEQ or others.",
                        "id": "BLE_MESH_MSG_CACHE_SIZE",
                        "name": "BLE_MESH_MSG_CACHE_SIZE",
                        "range": null,
                        "title": "Network message cache size",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Number of advertising buffers available. The transport layer reserves\nADV_BUF_COUNT - 3 buffers for outgoing segments. The maximum outgoing\nSDU size is 12 times this value (out of which 4 or 8 bytes are used\nfor the Transport Layer MIC). For example, 5 segments means the maximum\nSDU size is 60 bytes, which leaves 56 bytes for application layer data\nusing a 4-byte MIC, or 52 bytes using an 8-byte MIC.",
                        "id": "BLE_MESH_ADV_BUF_COUNT",
                        "name": "BLE_MESH_ADV_BUF_COUNT",
                        "range": null,
                        "title": "Number of advertising buffers",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "When the IV Update state enters Normal operation or IV Update\nin Progress, we need to keep track of how many hours has passed\nin the state, since the specification requires us to remain in\nthe state at least for 96 hours (Update in Progress has an\nadditional upper limit of 144 hours).\n\nIn order to fulfill the above requirement, even if the node might\nbe powered off once in a while, we need to store persistently\nhow many hours the node has been in the state. This doesn't\nnecessarily need to happen every hour (thanks to the flexible\nduration range). The exact cadence will depend a lot on the\nways that the node will be used and what kind of power source it\nhas.\n\nSince there is no single optimal answer, this configuration\noption allows specifying a divider, i.e. how many intervals\nthe 96 hour minimum gets split into. After each interval the\nduration that the node has been in the current state gets\nstored to flash. E.g. the default value of 4 means that the\nstate is saved every 24 hours (96 / 4).",
                        "id": "BLE_MESH_IVU_DIVIDER",
                        "name": "BLE_MESH_IVU_DIVIDER",
                        "range": null,
                        "title": "Divider for IV Update state refresh timer",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Maximum number of simultaneous outgoing multi-segment and/or reliable messages.\nThe default value is 1, which means the device can only send one segmented\nmessage at a time. And if another segmented message is going to be sent, it\nshould wait for the completion of the previous one.\nIf users are going to send multiple segmented messages at the same time, this\nvalue should be configured properly.",
                        "id": "BLE_MESH_TX_SEG_MSG_COUNT",
                        "name": "BLE_MESH_TX_SEG_MSG_COUNT",
                        "range": null,
                        "title": "Maximum number of simultaneous outgoing segmented messages",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Maximum number of simultaneous incoming multi-segment and/or reliable messages.\nThe default value is 1, which means the device can only receive one segmented\nmessage at a time. And if another segmented message is going to be received,\nit should wait for the completion of the previous one.\nIf users are going to receive multiple segmented messages at the same time, this\nvalue should be configured properly.",
                        "id": "BLE_MESH_RX_SEG_MSG_COUNT",
                        "name": "BLE_MESH_RX_SEG_MSG_COUNT",
                        "range": null,
                        "title": "Maximum number of simultaneous incoming segmented messages",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Maximum incoming Upper Transport Access PDU length. Leave this to the default\nvalue, unless you really need to optimize memory usage.",
                        "id": "BLE_MESH_RX_SDU_MAX",
                        "name": "BLE_MESH_RX_SDU_MAX",
                        "range": null,
                        "title": "Maximum incoming Upper Transport Access PDU length",
                        "type": "int"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Maximum number of segments supported for outgoing messages.\nThis value should typically be fine-tuned based on what\nmodels the local node supports, i.e. what's the largest\nmessage payload that the node needs to be able to send.\nThis value affects memory and call stack consumption, which\nis why the default is lower than the maximum that the\nspecification would allow (32 segments).\n\nThe maximum outgoing SDU size is 12 times this number (out of\nwhich 4 or 8 bytes is used for the Transport Layer MIC). For\nexample, 5 segments means the maximum SDU size is 60 bytes,\nwhich leaves 56 bytes for application layer data using a\n4-byte MIC and 52 bytes using an 8-byte MIC.\n\nBe sure to specify a sufficient number of advertising buffers\nwhen setting this option to a higher value. There must be at\nleast three more advertising buffers (BLE_MESH_ADV_BUF_COUNT)\nas there are outgoing segments.",
                        "id": "BLE_MESH_TX_SEG_MAX",
                        "name": "BLE_MESH_TX_SEG_MAX",
                        "range": null,
                        "title": "Maximum number of segments in outgoing messages",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BLE_MESH_RELAY_ADV_BUF && BLE_MESH_RELAY && BLE_MESH",
                                        "help": "Number of advertising buffers for relay packets available.",
                                        "id": "BLE_MESH_RELAY_ADV_BUF_COUNT",
                                        "name": "BLE_MESH_RELAY_ADV_BUF_COUNT",
                                        "range": null,
                                        "title": "Number of advertising buffers for relay packets",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BLE_MESH_RELAY && BLE_MESH",
                                "help": "When selected, self-send packets will be put in a high-priority\nqueue and relay packets will be put in a low-priority queue.",
                                "id": "BLE_MESH_RELAY_ADV_BUF",
                                "name": "BLE_MESH_RELAY_ADV_BUF",
                                "range": null,
                                "title": "Use separate advertising buffers for relay packets",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BLE_MESH_NODE && BLE_MESH",
                        "help": "Support for acting as a Mesh Relay Node. Enabling this option will allow\na node to support the Relay feature, and the Relay feature can still\nbe enabled or disabled by proper configuration messages. Disabling this\noption will let a node not support the Relay feature.",
                        "id": "BLE_MESH_RELAY",
                        "name": "BLE_MESH_RELAY",
                        "range": null,
                        "title": "Relay support",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "Perform the Friendship establishment using low power with the help of a\nreduced scan duty cycle. The downside of this is that the node may miss\nout on messages intended for it until it has successfully set up Friendship\nwith a Friend node.\nWhen this option is enabled, the node will stop scanning for a period of\ntime after a Friend Request or Friend Poll is sent, so as to reduce more\npower consumption.",
                                "id": "BLE_MESH_LPN_ESTABLISHMENT",
                                "name": "BLE_MESH_LPN_ESTABLISHMENT",
                                "range": null,
                                "title": "Perform Friendship establishment using low power",
                                "type": "bool"
                            },
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "BLE_MESH_LPN_AUTO && BLE_MESH_LOW_POWER && BLE_MESH",
                                        "help": "Time in seconds from the last received message, that the node waits out\nbefore starting to look for Friend nodes.",
                                        "id": "BLE_MESH_LPN_AUTO_TIMEOUT",
                                        "name": "BLE_MESH_LPN_AUTO_TIMEOUT",
                                        "range": null,
                                        "title": "Time from last received message before going to LPN mode",
                                        "type": "int"
                                    }
                                ],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "Once provisioned, automatically enable LPN functionality and start looking\nfor Friend nodes. If this option is disabled LPN mode needs to be manually\nenabled by calling bt_mesh_lpn_set(true).\nWhen an unprovisioned device is provisioned successfully and becomes a node,\nenabling this option will trigger the node starts to send Friend Request at\na certain period until it finds a proper Friend node.",
                                "id": "BLE_MESH_LPN_AUTO",
                                "name": "BLE_MESH_LPN_AUTO",
                                "range": null,
                                "title": "Automatically start looking for Friend nodes once provisioned",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "Time in seconds between Friend Requests, if a previous Friend Request did\nnot yield any acceptable Friend Offers.",
                                "id": "BLE_MESH_LPN_RETRY_TIMEOUT",
                                "name": "BLE_MESH_LPN_RETRY_TIMEOUT",
                                "range": null,
                                "title": "Retry timeout for Friend requests",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "The contribution of the RSSI, measured by the Friend node, used in Friend\nOffer Delay calculations. 0 = 1, 1 = 1.5, 2 = 2, 3 = 2.5.\nRSSIFactor, one of the parameters carried by Friend Request sent by Low Power\nnode, which is used to calculate the Friend Offer Delay.",
                                "id": "BLE_MESH_LPN_RSSI_FACTOR",
                                "name": "BLE_MESH_LPN_RSSI_FACTOR",
                                "range": null,
                                "title": "RSSIFactor, used in Friend Offer Delay calculation",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "The contribution of the supported Receive Window used in Friend Offer\nDelay calculations. 0 = 1, 1 = 1.5, 2 = 2, 3 = 2.5.\nReceiveWindowFactor, one of the parameters carried by Friend Request sent by\nLow Power node, which is used to calculate the Friend Offer Delay.",
                                "id": "BLE_MESH_LPN_RECV_WIN_FACTOR",
                                "name": "BLE_MESH_LPN_RECV_WIN_FACTOR",
                                "range": null,
                                "title": "ReceiveWindowFactor, used in Friend Offer Delay calculation",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "The MinQueueSizeLog field is defined as log_2(N), where N is the minimum\nnumber of maximum size Lower Transport PDUs that the Friend node can store\nin its Friend Queue. As an example, MinQueueSizeLog value 1 gives N = 2,\nand value 7 gives N = 128.",
                                "id": "BLE_MESH_LPN_MIN_QUEUE_SIZE",
                                "name": "BLE_MESH_LPN_MIN_QUEUE_SIZE",
                                "range": null,
                                "title": "Minimum size of the acceptable friend queue (MinQueueSizeLog)",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "The ReceiveDelay is the time between the Low Power node sending a\nrequest and listening for a response. This delay allows the Friend\nnode time to prepare the response. The value is in units of milliseconds.",
                                "id": "BLE_MESH_LPN_RECV_DELAY",
                                "name": "BLE_MESH_LPN_RECV_DELAY",
                                "range": null,
                                "title": "Receive delay requested by the local node",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "PollTimeout timer is used to measure time between two consecutive\nrequests sent by a Low Power node. If no requests are received\nthe Friend node before the PollTimeout timer expires, then the\nfriendship is considered terminated. The value is in units of 100\nmilliseconds, so e.g. a value of 300 means 30 seconds.\nThe smaller the value, the faster the Low Power node tries to get\nmessages from corresponding Friend node and vice versa.",
                                "id": "BLE_MESH_LPN_POLL_TIMEOUT",
                                "name": "BLE_MESH_LPN_POLL_TIMEOUT",
                                "range": null,
                                "title": "The value of the PollTimeout timer",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "The initial value of the PollTimeout timer when Friendship is to be\nestablished for the first time. After this, the timeout gradually\ngrows toward the actual PollTimeout, doubling in value for each iteration.\nThe value is in units of 100 milliseconds, so e.g. a value of 300 means\n30 seconds.",
                                "id": "BLE_MESH_LPN_INIT_POLL_TIMEOUT",
                                "name": "BLE_MESH_LPN_INIT_POLL_TIMEOUT",
                                "range": null,
                                "title": "The starting value of the PollTimeout timer",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "Latency (in milliseconds) is the time it takes to enable scanning. In\npractice, it means how much time in advance of the Receive Window, the\nrequest to enable scanning is made.",
                                "id": "BLE_MESH_LPN_SCAN_LATENCY",
                                "name": "BLE_MESH_LPN_SCAN_LATENCY",
                                "range": null,
                                "title": "Latency for enabling scanning",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_LOW_POWER && BLE_MESH",
                                "help": "Maximum number of groups to which the LPN can subscribe.",
                                "id": "BLE_MESH_LPN_GROUPS",
                                "name": "BLE_MESH_LPN_GROUPS",
                                "range": null,
                                "title": "Number of groups the LPN can subscribe to",
                                "type": "int"
                            }
                        ],
                        "depends_on": "BLE_MESH_NODE && BLE_MESH",
                        "help": "Enable this option to operate as a Low Power Node. If low power consumption\nis required by a node, this option should be enabled. And once the node\nenters the mesh network, it will try to find a Friend node and establish a\nfriendship.",
                        "id": "BLE_MESH_LOW_POWER",
                        "name": "BLE_MESH_LOW_POWER",
                        "range": null,
                        "title": "Support for Low Power features",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_FRIEND && BLE_MESH",
                                "help": "Receive Window in milliseconds supported by the Friend node.",
                                "id": "BLE_MESH_FRIEND_RECV_WIN",
                                "name": "BLE_MESH_FRIEND_RECV_WIN",
                                "range": null,
                                "title": "Friend Receive Window",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_FRIEND && BLE_MESH",
                                "help": "Minimum number of buffers available to be stored for each local Friend Queue.\nThis option decides the size of each buffer which can be used by a Friend node\nto store messages for each Low Power node.",
                                "id": "BLE_MESH_FRIEND_QUEUE_SIZE",
                                "name": "BLE_MESH_FRIEND_QUEUE_SIZE",
                                "range": null,
                                "title": "Minimum number of buffers supported per Friend Queue",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_FRIEND && BLE_MESH",
                                "help": "Size of the Subscription List that can be supported by a Friend node for a\nLow Power node. And Low Power node can send Friend Subscription List Add or\nFriend Subscription List Remove messages to the Friend node to add or remove\nsubscription addresses.",
                                "id": "BLE_MESH_FRIEND_SUB_LIST_SIZE",
                                "name": "BLE_MESH_FRIEND_SUB_LIST_SIZE",
                                "range": null,
                                "title": "Friend Subscription List Size",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_FRIEND && BLE_MESH",
                                "help": "Number of Low Power Nodes with which a Friend can have Friendship simultaneously.\nA Friend node can have friendship with multiple Low Power nodes at the same time,\nwhile a Low Power node can only establish friendship with only one Friend node at\nthe same time.",
                                "id": "BLE_MESH_FRIEND_LPN_COUNT",
                                "name": "BLE_MESH_FRIEND_LPN_COUNT",
                                "range": null,
                                "title": "Number of supported LPN nodes",
                                "type": "int"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH_FRIEND && BLE_MESH",
                                "help": "Number of incomplete segment lists tracked for each Friends' LPN.\nIn other words, this determines from how many elements can segmented\nmessages destined for the Friend queue be received simultaneously.",
                                "id": "BLE_MESH_FRIEND_SEG_RX",
                                "name": "BLE_MESH_FRIEND_SEG_RX",
                                "range": null,
                                "title": "Number of incomplete segment lists per LPN",
                                "type": "int"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "help": "Enable this option to be able to act as a Friend Node.",
                        "id": "BLE_MESH_FRIEND",
                        "name": "BLE_MESH_FRIEND",
                        "range": null,
                        "title": "Support for Friend feature",
                        "type": "bool"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH && BLE_MESH",
                        "help": "Select this to save the BLE Mesh related rodata code size. Enabling this option\nwill disable the output of BLE Mesh debug log.",
                        "id": "BLE_MESH_NO_LOG",
                        "name": "BLE_MESH_NO_LOG",
                        "range": null,
                        "title": "Disable BLE Mesh debug logs (minimize bin size)",
                        "type": "bool"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_TRACE_LEVEL_NONE",
                                        "name": "BLE_MESH_TRACE_LEVEL_NONE",
                                        "range": null,
                                        "title": "NONE",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_TRACE_LEVEL_ERROR",
                                        "name": "BLE_MESH_TRACE_LEVEL_ERROR",
                                        "range": null,
                                        "title": "ERROR",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_TRACE_LEVEL_WARNING",
                                        "name": "BLE_MESH_TRACE_LEVEL_WARNING",
                                        "range": null,
                                        "title": "WARNING",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_TRACE_LEVEL_INFO",
                                        "name": "BLE_MESH_TRACE_LEVEL_INFO",
                                        "range": null,
                                        "title": "INFO",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_TRACE_LEVEL_DEBUG",
                                        "name": "BLE_MESH_TRACE_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "DEBUG",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_STACK_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_TRACE_LEVEL_VERBOSE",
                                        "name": "BLE_MESH_TRACE_LEVEL_VERBOSE",
                                        "range": null,
                                        "title": "VERBOSE",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH",
                                "help": "Define BLE Mesh trace level for BLE Mesh stack.",
                                "id": "component-config-esp-ble-mesh-support-ble-mesh-stack-debug-log-level-ble_mesh_stack",
                                "name": "BLE_MESH_STACK_TRACE_LEVEL",
                                "title": "BLE_MESH_STACK",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH",
                                "help": null,
                                "id": "BLE_MESH_STACK_TRACE_LEVEL",
                                "name": "BLE_MESH_STACK_TRACE_LEVEL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            }
                        ],
                        "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH",
                        "id": "component-config-esp-ble-mesh-support-ble-mesh-stack-debug-log-level",
                        "title": "BLE Mesh STACK DEBUG LOG LEVEL",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_NONE",
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_NONE",
                                        "range": null,
                                        "title": "NONE",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_ERROR",
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_ERROR",
                                        "range": null,
                                        "title": "ERROR",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_WARNING",
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_WARNING",
                                        "range": null,
                                        "title": "WARNING",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_INFO",
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_INFO",
                                        "range": null,
                                        "title": "INFO",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_DEBUG",
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_DEBUG",
                                        "range": null,
                                        "title": "DEBUG",
                                        "type": "bool"
                                    },
                                    {
                                        "children": [],
                                        "depends_on": "<choice BLE_MESH_NET_BUF_TRACE_LEVEL>",
                                        "help": null,
                                        "id": "BLE_MESH_NET_BUF_TRACE_LEVEL_VERBOSE",
                                        "name": "BLE_MESH_NET_BUF_TRACE_LEVEL_VERBOSE",
                                        "range": null,
                                        "title": "VERBOSE",
                                        "type": "bool"
                                    }
                                ],
                                "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH",
                                "help": "Define BLE Mesh trace level for BLE Mesh net buffer.",
                                "id": "component-config-esp-ble-mesh-support-ble-mesh-net-buf-debug-log-level-ble_mesh_net_buf",
                                "name": "BLE_MESH_NET_BUF_TRACE_LEVEL",
                                "title": "BLE_MESH_NET_BUF",
                                "type": "choice"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH && BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH",
                                "help": null,
                                "id": "BLE_MESH_NET_BUF_TRACE_LEVEL",
                                "name": "BLE_MESH_NET_BUF_TRACE_LEVEL",
                                "range": null,
                                "title": null,
                                "type": "int"
                            }
                        ],
                        "depends_on": "BLE_MESH && !BLE_MESH_NO_LOG && BLE_MESH",
                        "id": "component-config-esp-ble-mesh-support-ble-mesh-net-buf-debug-log-level",
                        "title": "BLE Mesh NET BUF DEBUG LOG LEVEL",
                        "type": "menu"
                    },
                    {
                        "children": [],
                        "depends_on": "BLE_MESH",
                        "help": "Timeout value used by the node to get response of the acknowledged\nmessage which is sent by the client model.\nThis value indicates the maximum time that a client model waits for\nthe response of the sent acknowledged messages. If a client model\nuses 0 as the timeout value when sending acknowledged messages, then\nthe default value will be used which is four seconds.",
                        "id": "BLE_MESH_CLIENT_MSG_TIMEOUT",
                        "name": "BLE_MESH_CLIENT_MSG_TIMEOUT",
                        "range": null,
                        "title": "Timeout(ms) for client message response",
                        "type": "int"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Configuration Client model.",
                                "id": "BLE_MESH_CFG_CLI",
                                "name": "BLE_MESH_CFG_CLI",
                                "range": null,
                                "title": "Configuration Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Health Client model.",
                                "id": "BLE_MESH_HEALTH_CLI",
                                "name": "BLE_MESH_HEALTH_CLI",
                                "range": null,
                                "title": "Health Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Health Server model.",
                                "id": "BLE_MESH_HEALTH_SRV",
                                "name": "BLE_MESH_HEALTH_SRV",
                                "range": null,
                                "title": "Health Server model",
                                "type": "bool"
                            }
                        ],
                        "depends_on": "BLE_MESH",
                        "id": "component-config-esp-ble-mesh-support-support-for-ble-mesh-foundation-models",
                        "title": "Support for BLE Mesh Foundation models",
                        "type": "menu"
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic OnOff Client model.",
                                "id": "BLE_MESH_GENERIC_ONOFF_CLI",
                                "name": "BLE_MESH_GENERIC_ONOFF_CLI",
                                "range": null,
                                "title": "Generic OnOff Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Level Client model.",
                                "id": "BLE_MESH_GENERIC_LEVEL_CLI",
                                "name": "BLE_MESH_GENERIC_LEVEL_CLI",
                                "range": null,
                                "title": "Generic Level Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Default Transition Time Client model.",
                                "id": "BLE_MESH_GENERIC_DEF_TRANS_TIME_CLI",
                                "name": "BLE_MESH_GENERIC_DEF_TRANS_TIME_CLI",
                                "range": null,
                                "title": "Generic Default Transition Time Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Power OnOff Client model.",
                                "id": "BLE_MESH_GENERIC_POWER_ONOFF_CLI",
                                "name": "BLE_MESH_GENERIC_POWER_ONOFF_CLI",
                                "range": null,
                                "title": "Generic Power OnOff Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Power Level Client model.",
                                "id": "BLE_MESH_GENERIC_POWER_LEVEL_CLI",
                                "name": "BLE_MESH_GENERIC_POWER_LEVEL_CLI",
                                "range": null,
                                "title": "Generic Power Level Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Battery Client model.",
                                "id": "BLE_MESH_GENERIC_BATTERY_CLI",
                                "name": "BLE_MESH_GENERIC_BATTERY_CLI",
                                "range": null,
                                "title": "Generic Battery Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Location Client model.",
                                "id": "BLE_MESH_GENERIC_LOCATION_CLI",
                                "name": "BLE_MESH_GENERIC_LOCATION_CLI",
                                "range": null,
                                "title": "Generic Location Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Generic Property Client model.",
                                "id": "BLE_MESH_GENERIC_PROPERTY_CLI",
                                "name": "BLE_MESH_GENERIC_PROPERTY_CLI",
                                "range": null,
                                "title": "Generic Property Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Sensor Client model.",
                                "id": "BLE_MESH_SENSOR_CLI",
                                "name": "BLE_MESH_SENSOR_CLI",
                                "range": null,
                                "title": "Sensor Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Time Client model.",
                                "id": "BLE_MESH_TIME_CLI",
                                "name": "BLE_MESH_TIME_CLI",
                                "range": null,
                                "title": "Time Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Scene Client model.",
                                "id": "BLE_MESH_SCENE_CLI",
                                "name": "BLE_MESH_SCENE_CLI",
                                "range": null,
                                "title": "Scene Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Scheduler Client model.",
                                "id": "BLE_MESH_SCHEDULER_CLI",
                                "name": "BLE_MESH_SCHEDULER_CLI",
                                "range": null,
                                "title": "Scheduler Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Light Lightness Client model.",
                                "id": "BLE_MESH_LIGHT_LIGHTNESS_CLI",
                                "name": "BLE_MESH_LIGHT_LIGHTNESS_CLI",
                                "range": null,
                                "title": "Light Lightness Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Light CTL Client model.",
                                "id": "BLE_MESH_LIGHT_CTL_CLI",
                                "name": "BLE_MESH_LIGHT_CTL_CLI",
                                "range": null,
                                "title": "Light CTL Client model",
                                "type": "bool"
                            },
                            {
                                "children": [],
                                "depends_on": "BLE_MESH",
                                "help": "Enable support for Light HSL Client model.",
                                "id": "BLE_MESH_LIGHT_HSL_CLI",
                                "name": "BLE_MESH_LIGHT_HSL_CLI",
                                "range": null,
                                "title": "Light HSL Client model",
       